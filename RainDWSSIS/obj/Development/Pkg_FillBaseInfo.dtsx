<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/15/2025 5:14:31 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DASHBOARD"
  DTS:CreatorName="ANG\a.hasani"
  DTS:DTSID="{8CB3715C-41E1-4EAC-BA9A-15EA32F3A14B}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Pkg_FillBaseInfo"
  DTS:PackageType="5"
  DTS:VersionBuild="633"
  DTS:VersionGUID="{3293BB64-CF8C-4618-84EB-1CF6F37CCAED}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="20"
      DTS:DTSID="{FC5D4667-5DF1-4123-8E7D-E4A5425FBF93}"
      DTS:ObjectName="Parameter">
      <DTS:Property
        DTS:DataType="20"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D9BA3E14-AD04-41AF-899E-A0DDAA3C07D7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_I4)REPLACE(  LEFT ( (  DT_WSTR, 30) DATEADD(&quot;day&quot;, @[$Project::PR_GetDuration] * -1 , GETDATE()) , 10 ) ,&quot;-&quot; , &quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_CalcFilterDate">
      <DTS:VariableValue
        DTS:DataType="3">20250713</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B93770E-1FF3-44D5-9028-4747FEB5EA79}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_Calender_08">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF51A879-8863-4EBA-A1FF-07578CF5DE1B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_DimCompany_01">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E8F81F84-6730-437E-9BAF-820B261F6120}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_DimDictionary_04">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AB945D16-B30B-42FF-97AD-70E76C3EEE6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_DimEmployee_03">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A73F56A3-A816-459D-A226-599B346FA4B6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_DimRepository_06">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74DEF13C-F6EA-4E94-8D85-D2DD9BE94008}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_DimStore_02">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{596CCA71-6C32-4493-88A3-EF99CA19CE79}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_DimTender_07">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F29E9D0C-3DEC-4727-B11D-1A09EC000946}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_DimUser_05">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BD7F22B7-F26C-4E3B-85BD-9426CCF765B9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_DimWorkstation_09">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02D72541-1E7F-4F27-9481-9B7596E90FDE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="DATEADD(&quot;day&quot;, @[$Project::PR_GetDuration] * -1 , GETDATE())"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_FilterDate">
      <DTS:VariableValue
        DTS:DataType="7">7/13/2025 1:27:52 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCFF1A2D-705B-4456-8DEE-AD8C66D7ACDE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::PR_LogFolderPath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="VR_LogFolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\BI\BiProject\ETL\RainSSIS\EtlLog</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,13,OnPostExecute</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Run_Pkg_FillCustomerInfo"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{03C4021D-206B-4796-88BC-F9A71510F659}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run_Pkg_FillCustomerInfo"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{892C56C8-7DC7-4135-AD7E-8E503E5DE4EF}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="DT_SourceFillDimCustomerInfo">
          <DTS:VariableValue
            DTS:DataType="8">
DECLARE @DateNow DATETIME 

SET @DateNow = GETDATE ()

SELECT 
    X.CustomerID,
    CustomerGroupID,
    CustomerCode = CAST(CustomerCode AS NVARCHAR(50)),
    CustomerName = CAST(  X.CustomerName AS NVARCHAR(400)) , 
    Phone = CAST ( X.Telephone AS  nvarchar(50)  ),
    Mobile = CAST ( X.Mobile AS  nvarchar(50)) ,
    Birthday = CAST (Birthday AS DATE  ) ,
    [Address] = CAST ( [Address] AS nvarchar(1000) ),
    0.000000 AS Latitude,
    0.000000 AS Longitude,
    StoreID = 1,
    EtlTime = @DateNow
FROM [10.15.20.231\RWP_2022].[RWP_Sale_DB_Bakhshi].[dbo].[CustomerView] X
LEFT JOIN [10.15.20.231\RWP_2022].[RWP_Sale_DB_Bakhshi].[dbo].CustomerGroupAssignment CG  
    ON CG.CustomerID = X.CustomerID 
    AND CG.TYPEID = 1
WHERE X.LanguageID = 314 
AND NOT EXISTS (
    SELECT * 
    FROM [dbo].DimCustomer 
    WHERE CustomerID = X.CustomerID
)</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{0F01AA20-639D-445F-8F57-B4CE0966933F}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="VR_Seq_FillCustomerInfo_DimCustomerGroup_02">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:LoggingOptions
        DTS:FilterKind="0">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,13,OnPostExecute</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_FillCustomerInfo.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{D1690F81-E215-4176-8AB3-5468C37C39AC}"
          DTS:EventID="-1"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{A03B9D83-C1CC-40E4-B986-EED96FA8F172}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_FillCustomerInfo.EventHandlers[OnError]\Pkg_FillCutomerInfo_OnError"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{1E2C72E6-F848-4A44-A32D-A478B634F274}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillCutomerInfo_OnError">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c2dcde8b80304c39986cbb0c215781bc"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::PackageName, System::SourceName, System::ExecutionInstanceGUID, System::ErrorCode, System::ErrorDescription, System::TaskName, User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c2dcde8b80304c39986cbb0c215781bc.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{29e14639-e5e3-43a0-8bb7-6b3d9fd597a8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c2dcde8b80304c39986cbb0c215781bc</RootNamespace>
    <AssemblyName>ST_c2dcde8b80304c39986cbb0c215781bc</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_c2dcde8b80304c39986cbb0c215781bc
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 متغیرهای لاگ خطا
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString();
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string errorCode = Dts.Variables["System::ErrorCode"].Value.ToString();
                string errorDesc = Dts.Variables["System::ErrorDescription"].Value.ToString();
                string status = "FAILED";

                // 🔹 ساخت مسیر فایل لاگ
                string logFileName = $"SSIS_Pkg_FillCustomerInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine($"Error Code    : {errorCode}");
                    sw.WriteLine($"Error Message : {errorDesc}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 لاگ خطای ثانویه
                string fallbackPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Exception in OnError Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillCustomerInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(fallbackPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);
                bool fireAgain = true;
                Dts.Events.FireError(0, "OnError Event Handler Script", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c2dcde8b80304c39986cbb0c215781bc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c2dcde8b80304c39986cbb0c215781bc</msb:DisplayName>
    <msb:ProjectId>{508D66B5-751A-4A52-9F24-40144D5BE06B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c2dcde8b80304c39986cbb0c215781bc.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c2dcde8b80304c39986cbb0c215781bc.Properties.Settings.get_Default():ST_c2dcde8b80304c39986cbb0c215781bc.Properties.Sett" +
    "ings")]

namespace ST_c2dcde8b80304c39986cbb0c215781bc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c2dcde8b80304c39986cbb0c215781bc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c2dcde8b80304c39986cbb0c215781bc")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c2dcde8b80304c39986cbb0c215781bc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c2dcde8b80304c39986cbb0c215781bc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c2dcde8b80304c39986cbb0c215781bc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c2dcde8b80304c39986cbb0c215781bc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c2dcde8b80304c39986cbb0c215781bc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c2dcde8b80304c39986cbb0c215781bc.dll">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
YzM5OTg2Y2JiMGMyMTU3ODFiYwBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUARmlsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRl
TGluZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2MyZGNkZThiODAzMDRj
Mzk5ODZjYmIwYzIxNTc4MWJjLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYzJkY2RlOGI4MDMwNGMzOTk4NmNi
YjBjMjE1NzgxYmMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2MyZGNkZThiODAzMDRjMzk5ODZjYmIwYzIxNTc4MWJjLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4
aXN0cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABBcHBl
bmRBbGxUZXh0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAAAAALVUAcwBl
AHIAOgA6AFYAUgBfAEwAbwBnAEYAbwBsAGQAZQByAFAAYQB0AGgAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBt
AGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAA7UwB5AHMAdABlAG0AOgA6AEUA
eABlAGMAdQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBHAFUASQBEAAAjUwB5AHMAdABlAG0AOgA6
AEUAcgByAG8AcgBDAG8AZABlAAAxUwB5AHMAdABlAG0AOgA6AEUAcgByAG8AcgBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAA1GAEEASQBMAEUARAAAXVMAUwBJAFMAXwBQAGsAZwBfAEYAaQBsAGwAQwB1
AHMAdABvAG0AZQByAEkAbgBmAG8AXwBMAG8AZwBfAHsAMAA6AHkAeQB5AHkATQBNAGQAZAB9AC4A
bABvAGcAAGUtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0AAU9EAGEA
dABlAFQAaQBtAGUAIAAgACAAIAAgACAAOgAgAHsAMAA6AHkAeQB5AHkALQBNAE0ALQBkAGQAIABI
AEgAOgBtAG0AOgBzAHMAfQABIVAAYQBjAGsAYQBnAGUAIABOAGEAbQBlACAAIAA6ACAAACFTAG8A
dQByAGMAZQAgAFQAYQBzAGsAIAAgACAAOgAgAAAhUwBjAHIAaQBwAHQAIABUAGEAcwBrACAAIAAg
ADoAIAAAIUUAeABlAGMAdQB0AGkAbwBuACAASQBEACAAIAA6ACAAACFTAHQAYQB0AHUAcwAgACAA
IAAgACAAIAAgACAAOgAgAAAhRQByAHIAbwByACAAQwBvAGQAZQAgACAAIAAgADoAIAAAIUUAcgBy
AG8AcgAgAE0AZQBzAHMAYQBnAGUAIAA6ACAAAFdbAHsAMAB9AF0AIABFAHgAYwBlAHAAdABpAG8A
bgAgAGkAbgAgAE8AbgBFAHIAcgBvAHIAIABTAGMAcgBpAHAAdAA6AAoAewAxAH0ACgB7ADIAfQAK
AABpRQB4AGMAZQBwAHQAaQBvAG4AXwBTAFMASQBTAF8AUABrAGcAXwBGAGkAbABsAEMAdQBzAHQA
bwBtAGUAcgBJAG4AZgBvAF8AewAwADoAeQB5AHkAeQBNAE0AZABkAH0ALgBsAG8AZwAAOU8AbgBF
AHIAcgBvAHIAIABFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByACAAUwBjAHIAaQBwAHQAAAEAcVMA
VABfAGMAMgBkAGMAZABlADgAYgA4ADAAMwAwADQAYwAzADkAOQA4ADYAYwBiAGIAMABjADIAMQA1
ADcAOAAxAGIAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA
VS9Vm/AbPUmbLn8oBeR1CwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWREHDQ4ODg4ODg4ODhI9
EkEODgQgABJpBCAAEm0FIAEScRwDIAAcAyAADgQAAQIOBQABEnkOBAAAEX0FAAIODhwFAAIODg4F
IAIBDgIHAAQODhwcHAUAAgEODgUgABKAlQggBQIIDg4OCAgAARKAmRGAnQUgABKAoQcgAgEOEoCh
CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQEAAASUQQAABJV
BQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9jMmRjZGU4YjgwMzA0YzM5OTg2Y2JiMGMyMTU3
ODFiYwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAABDYAAAAAAAAAAAAAHjYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA2AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAF52PSQAAAEAXnY9JD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AYwAyAGQAYwBkAGUAOABiADgAMAAzADAANABjADMAOQA5ADgANgBjAGIAYgAwAGMAMgAx
ADUANwA4ADEAYgBjAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA3ADcALgAzADAAMwAwADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AYwAyAGQAYwBkAGUAOABiADgAMAAzADAANABjADMAOQA5ADgANgBjAGIAYgAwAGMAMgAxADUA
NwA4ADEAYgBjAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBjADIAZABjAGQAZQA4AGIAOAAwADMAMAA0AGMAMwA5ADkAOAA2AGMAYgBiADAA
YwAyADEANQA3ADgAMQBiAGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AYwAyAGQAYwBkAGUAOABiADgAMAAzADAANABjADMAOQA5ADgANgBjAGIAYgAwAGMA
MgAxADUANwA4ADEAYgBjAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIANwA3AC4AMwAwADMAMAAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIANwA3AC4AMwAwADMAMAAyAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_FillCustomerInfo.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{077AE839-C404-40CB-A54A-38C4D65AF1F5}"
          DTS:EventID="-756338400"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{D98468C9-0B1B-442B-AAAD-67A72CF65A7F}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_FillCustomerInfo.EventHandlers[OnPostExecute]\Pkg_FillCutomerInfo_PostExecute"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{84371FF1-A98E-468D-8E90-728A9DCC62E5}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillCutomerInfo_PostExecute">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_876036237bcf4ce2b5ab871d13ffcea8"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,System::SourceName,System::ExecutionInstanceGUID,System::PackageName,System::StartTime,User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_876036237bcf4ce2b5ab871d13ffcea8.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5D4D985D-D42B-4B55-8C3B-751C7F6C86B9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_876036237bcf4ce2b5ab871d13ffcea8</RootNamespace>
    <AssemblyName>ST_876036237bcf4ce2b5ab871d13ffcea8</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_876036237bcf4ce2b5ab871d13ffcea8.Properties.Settings.get_Default():ST_876036237bcf4ce2b5ab871d13ffcea8.Properties.Sett" +
    "ings")]

namespace ST_876036237bcf4ce2b5ab871d13ffcea8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_876036237bcf4ce2b5ab871d13ffcea8
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{

            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 خواندن متغیرهای سیستمی
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString(); // Task اصلی
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();   // خود Script Task
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string status = "Success"; // چون PostExecute اجرا شده، یعنی موفق بوده

                // 🔹 ساخت نام فایل لاگ به صورت روزانه
                string logFileName = $"SSIS_Pkg_FillCustomerInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                // TODO: Add your code here

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 ثبت خطا در فایل پشتیبان
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Error in Event Handler Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillCustomerInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);

                // 🔴 ثبت خطا در SSIS Event
                bool fireAgain = true;
                Dts.Events.FireError(0, "Event Handler Script Error", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_876036237bcf4ce2b5ab871d13ffcea8</msb:CodeName>
    <msb:DisplayName>ST_876036237bcf4ce2b5ab871d13ffcea8</msb:DisplayName>
    <msb:ProjectId>{F8E5A655-81C3-4593-BBD8-C36E884F267D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_876036237bcf4ce2b5ab871d13ffcea8.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_876036237bcf4ce2b5ab871d13ffcea8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_876036237bcf4ce2b5ab871d13ffcea8")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_876036237bcf4ce2b5ab871d13ffcea8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_876036237bcf4ce2b5ab871d13ffcea8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_876036237bcf4ce2b5ab871d13ffcea8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_876036237bcf4ce2b5ab871d13ffcea8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_876036237bcf4ce2b5ab871d13ffcea8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_876036237bcf4ce2b5ab871d13ffcea8.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALGELWgAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAMjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOA0AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
NQAAAAAAAEgAAAACAAUAKCMAAAARAAABAAAAAAAAACg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgAuAgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKBigVAAAKLQcGKBYAAAomAigQAAAKbxEAAApyLwAAcG8SAAAKbxMAAApvFAAACgsC
KBAAAApvEQAACnJXAABwbxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKcn0AAHBvEgAACm8TAAAK
bxQAAAoNAigQAAAKbxEAAApynwAAcG8SAAAKbxMAAApvFAAAChMEctsAAHATBXLrAABwKBcAAAqM
HwAAASgYAAAKEwYGEQYoGQAAChdzGgAAChMHEQdySQEAcG8bAAAKEQdyrwEAcCgXAAAKjB8AAAEo
GAAACm8bAAAKEQdy/wEAcAcoHAAACm8bAAAKEQdyIQIAcAgoHAAACm8bAAAKEQdyQwIAcAkoHAAA
Cm8bAAAKEQdyZQIAcBEEKBwAAApvGwAAChEHcocCAHARBSgcAAAKbxsAAAoRB3JJAQBwbxsAAAoR
B28dAAAK3gwRBywHEQdvHgAACtwCKBAAAAoWbx8AAArdmwAAABMIAigQAAAKbxEAAApyAQAAcG8S
AAAKbxMAAApvFAAACnKpAgBwKBcAAAqMHwAAAREIbyAAAAoRCG8hAAAKKCIAAAoTCXIFAwBwKBcA
AAqMHwAAASgYAAAKEwoRCigZAAAKEQkoIwAACgIoEAAACm8kAAAKFnJvAwBwEQhvIAAACnKlAwBw
Fm8lAAAKJgIoEAAAChdvHwAACt4AKgAAQTQAAAIAAADdAAAAmAAAAHUBAAAMAAAAAAAAAAAAAAAA
AAAAkgEAAJIBAACbAAAAEAAAAR4CKCYAAAoqHgIoJwAACiqufgEAAAQtHnKnAwBw0AMAAAIoKAAA
Cm8pAAAKcyoAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigrAAAKKi5zCAAA
BoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAYAQAACN+AADMBAAA
UAYAACNTdHJpbmdzAAAAABwLAAAcBAAAI1VTADgPAAAQAAAAI0dVSUQAAABIDwAAuAEAACNCbG9i
AAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACgAAAAFAAAABgAAAAkAAAABAAAAKwAAAAIA
AAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAANMDAQAAAAAABgB+AvEEBgAN
A/EEBgDKAd4EDwBlBQAABgD3AVEEBgBhAlEEBgBCAlEEBgD0AlEEBgCeAlEEBgC3AlEEBgAOAlEE
BgApAjsDCgDSAoIDCgBBAYIDBgCvBC4ABgBjBAQEBgALBAQEBgCtAd4EBgD4BQQEBgCLBBEFBgBt
BDwEDgB9Ab0DDgDeAb0DDgBdAScEBgCSAfEECgCrA4IDEgCnBdoAEgCTANoABgBDBi4ABgB5BC4A
BgDRAAQEBgBXAwQEBgBeAy4ABgC8BC4ABgCcAAQEBgDMAC4ACgCbBIIDBgAMAQQEBgCoAAQEBgA0
BlEEAAAAACUAAAAAAAEAAQABABAAHAQBADkAAQABAAAAEAAYBXQFTQABAAMAAAEQALEFdAVhAAMA
BwADAQAAygUAAEUABAAKABEAEAS1ABEAMQG5ABEAdwC9AAYGVwDBAFaAugXEAFaAEQHEAFAgAAAA
AIYAIgQGAAEAwCIAAAAAhhjRBAYAAQDIIgAAAACDGNEEBgABANAiAAAAAJMIhwTIAAEA/CIAAAAA
kwgZAc0AAQADIwAAAACTCCUB0gABAAsjAAAAAJYI/wXYAAIAEiMAAAAAhhjRBAYAAgAaIwAAAACR
GNcE3QACAAAAAQA1AwkA0QQBABEA0QQGABkA0QQKACkA0QQQADEA0QQQADkA0QQQAEEA0QQQAEkA
0QQQAFEA0QQQAFkA0QQQAGEA0QQQAGkA0QQGAJEA0QQGALkA0QQVAMkA0QQGAHEAwgUrANEAowUw
ANkA+wM1AOEAKwM7AJkAVQM/AOkA4wVDAOkAPQZIAPkAKAZOAAEB8QVTAAkBBAFZAHkA0QRfABEB
+gAQAAEB6gVZABEB+gAGABkBdQEGANEACwYBAIEAhwA/AIEAaAA/AAEB8QVlACEBGgZtANEA2AVz
ACkBxwR5AHEA0QQGAJkA0QQGADEBugCCADEBMAaLAKEA0QSRAMEA0QQGAAgAFACrAAgAGACwACkA
cwAYAS4ACwDwAC4AEwD5AC4AGwAYAS4AIwAhAS4AKwBKAS4AMwBKAS4AOwBKAS4AQwAhAS4ASwBQ
AS4AUwBKAS4AWwBnAUMAYwCwAEkAcwAYAWEAewCwAGMAawCwABsAAwABAAQAAwAAAIsE4QAAADkB
5gAAAAMG6wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAADgkNE8AAAAAAAABAAAABAAA
AAAAAAAAAAAAmQBfAAAAAAAQAAAAAAAAAAAAAACiAGMDAAAAAAQAAAAAAAAAAAAAAJkABAQAAAAA
EAAAAAAAAAAAAAAAogA4AAAAAAAAAAAAAQAAACIFAAAFAAIAAAAAAABTVF84NzYwMzYyMzdiY2Y0
Y2UyYjVhYjg3MWQxM2ZmY2VhOAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3Rh
bmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBXcml0ZUxpbmUAQ29tYmluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF84NzYw
MzYyMzdiY2Y0Y2UyYjVhYjg3MWQxM2ZmY2VhOC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3RyZWFtV3JpdGVyAFRl
eHRXcml0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzg3NjAzNjIzN2Jj
ZjRjZTJiNWFiODcxZDEzZmZjZWE4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF84NzYwMzYyMzdiY2Y0Y2UyYjVhYjg3MWQxM2ZmY2VhOC5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAQXBwZW5kQWxsVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkA
AAAAAC1VAHMAZQByADoAOgBWAFIAXwBMAG8AZwBGAG8AbABkAGUAcgBQAGEAdABoAAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQBy
AGMAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAO1MAeQBzAHQA
ZQBtADoAOgBFAHgAZQBjAHUAdABpAG8AbgBJAG4AcwB0AGEAbgBjAGUARwBVAEkARAAAD1MAdQBj
AGMAZQBzAHMAAF1TAFMASQBTAF8AUABrAGcAXwBGAGkAbABsAEMAdQBzAHQAbwBtAGUAcgBJAG4A
ZgBvAF8ATABvAGcAXwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQAfQAuAGwAbwBnAABlLQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAAFPRABhAHQAZQBUAGkAbQBlACAAIAAg
ACAAIAAgADoAIAB7ADAAOgB5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBtADoAcwBzAH0A
ASFQAGEAYwBrAGEAZwBlACAATgBhAG0AZQAgACAAOgAgAAAhUwBvAHUAcgBjAGUAIABUAGEAcwBr
ACAAIAAgADoAIAAAIVMAYwByAGkAcAB0ACAAVABhAHMAawAgACAAIAA6ACAAACFFAHgAZQBjAHUA
dABpAG8AbgAgAEkARAAgACAAOgAgAAAhUwB0AGEAdAB1AHMAIAAgACAAIAAgACAAIAAgADoAIAAA
W1sAewAwAH0AXQAgAEUAcgByAG8AcgAgAGkAbgAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIA
IABTAGMAcgBpAHAAdAA6AAoAewAxAH0ACgB7ADIAfQAKAABpRQB4AGMAZQBwAHQAaQBvAG4AXwBT
AFMASQBTAF8AUABrAGcAXwBGAGkAbABsAEMAdQBzAHQAbwBtAGUAcgBJAG4AZgBvAF8AewAwADoA
eQB5AHkAeQBNAE0AZABkAH0ALgBsAG8AZwAANUUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIAIABT
AGMAcgBpAHAAdAAgAEUAcgByAG8AcgAAAQBxUwBUAF8AOAA3ADYAMAAzADYAMgAzADcAYgBjAGYA
NABjAGUAMgBiADUAYQBiADgANwAxAGQAMQAzAGYAZgBjAGUAYQA4AC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABo+WTDw3fyRpBFZjLG4BHZAAQgAQEIAyAAAQUg
AQEREQQgAQEOBSABARFZDwcLDg4ODg4ODhI9EkEODgQgABJpBCAAEm0FIAEScRwDIAAcAyAADgQA
AQIOBQABEnkOBAAAEX0FAAIODhwFAAIODg4FIAIBDgIHAAQODhwcHAUAAgEODgUgABKAlQggBQII
Dg4OCAgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
ElEDBhJVAwYSEAIGCAMGERQEAAASUQQAABJVBQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF84
NzYwMzYyMzdiY2Y0Y2UyYjVhYjg3MWQxM2ZmY2VhOAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDI1AABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUULk5FVCBGcmFtZXdvcmsgNC43LjIAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAACDUAAAAAAAAAAAAAIjUA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ1AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQA0TzgkAAABADRPOCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADgANwA2ADAAMwA2ADIAMwA3AGIAYwBmADQAYwBlADIAYgA1AGEAYgA4ADcAMQBkADEA
MwBmAGYAYwBlAGEAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5
ADIANwAyAC4AMgAwADIANwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADgANwA2ADAAMwA2ADIAMwA3AGIAYwBmADQAYwBlADIAYgA1AGEAYgA4ADcAMQBkADEAMwBm
AGYAYwBlAGEAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AOAA3ADYAMAAzADYAMgAzADcAYgBjAGYANABjAGUAMgBiADUAYQBiADgANwAx
AGQAMQAzAGYAZgBjAGUAYQA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADgANwA2ADAAMwA2ADIAMwA3AGIAYwBmADQAYwBlADIAYgA1AGEAYgA4ADcAMQBk
ADEAMwBmAGYAYwBlAGEAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOQAyADcAMgAuADIAMAAyADcANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADIAMAAyADcANgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA0NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Pkg_FillCustomerInfo.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run_Pkg_FillSaleInfo"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{517B1CAC-2C72-483A-8158-6DC57BC71468}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run_Pkg_FillSaleInfo"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{B0905109-1D2F-4FAE-BF7E-C32C8B22F2CE}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="DT_SourceFillFactSaleReturnInfo">
          <DTS:VariableValue
            DTS:DataType="8">
	
		
SELECT *
		FROM OPENQUERY( [10.15.20.231\RWP_2022] , 
		' 
		DECLARE @FilterRainDate DateTime ,
				@DateNow DATETIME 

		SET @FilterRainDate =  CAST( ''2/12/2025 6:02:04 PM''  AS DATE) 
		SET @DateNow = GETDATE()


	SELECT  
			CompanyID =  1, S.BookerStoreID, S.BookerWorkstationID, S.InvoiceID, SI.LineItemID, 
		InvoiceDate = CAST(REPLACE(CAST(CAST(S.InvoiceDate AS DATE) AS NVARCHAR), ''-'', '''') AS INT),
		  BusinessDate =  CAST(REPLACE(CAST(CAST(ISNULL(S.BusinessDate, S.InvoiceDate) AS DATE) AS NVARCHAR), ''-'', '''') AS INT),	
		GroupID = CCA.CustomerGroupID
		, S.CustomerID , C.SupplierID, C.ContractTypeID , S.StockID, 
		SI.ItemID, SI.ReasonID, S.InvoiceTypeID, SI.TypeID,
		SI.Quantity, SI.BonusQuantity,  Amount =  (SI.Quantity + SI.BonusQuantity) * SI.PriceAmount,
		SI.DiscountAmount, SI.ManualDiscount, SI.InvoiceDiscount,
		SI.DiscountPercent, SI.ManualDiscountPercent, SI.InvoiceDiscountPercent,
		SI.TaxAmount, SI.TollAmount,Comission =  NULL, 
		SI.RoundAmount,
 		NetAmount = CASE WHEN ISNULL(SI.IsPriceWithTax, 0) = 1 THEN 
				((SI.Quantity + SI.BonusQuantity) * SI.PriceAmount) - ISNULL(SI.DiscountAmount, 0) - ISNULL(SI.InvoiceDiscount, 0) - ISNULL(SI.ManualDiscount, 0) - ISNULL(SI.RoundAmount, 0) - ISNULL(SI.TaxAmount, 0) - ISNULL(SI.TollAmount, 0)
		ELSE
				((SI.Quantity + SI.BonusQuantity) * SI.PriceAmount) - ISNULL(SI.DiscountAmount, 0) - ISNULL(SI.InvoiceDiscount, 0) - ISNULL(SI.ManualDiscount, 0) - ISNULL(SI.RoundAmount, 0)
		END,
		NetCost = 0
		, SI.IsPriceWithTax
		, EtlTime =@DateNow

	FROM  [RWP_Sale_DB_Bakhshi].[dbo].SaleInvoice S WITH(NOLOCK)
	INNER JOIN   [RWP_Sale_DB_Bakhshi].[dbo].SaleInvoiceLineItem SI WITH(NOLOCK)
		ON S.BookerStoreID = SI.BookerStoreID AND 
		S.BookerWorkstationID = SI.BookerWorkstationID AND 
		S.InvoiceID = SI.InvoiceID
	LEFT JOIN [RWP_Sale_DB_Bakhshi].[dbo].CustomerGroupAssignment CCA
		ON CCA.CustomerID = S.CustomerID 		
		AND  CCA.TypeID = 1 
	LEFT JOIN  [RWP_Sale_DB_Bakhshi].[dbo].StoreDailyTurnOver D WITH(NOLOCK)
		ON S.BookerStoreID = D.StoreID
		AND S.BusinessDate	= D.BusinessDay
	LEFT JOIN  [RWP_Sale_DB_Bakhshi].[dbo].StoreDailyTurnOverLineItem DI WITH(NOLOCK)
		ON D.ID = DI.ID
		AND SI.ItemID = DI.ItemID
	LEFT JOIN  [RWP_Sale_DB_Bakhshi].[dbo].SupplierContract C WITH(NOLOCK)
		ON DI.ContractID = C.ContractID
	
	--LEFT JOIN FactSaleReturn FR 
	--	ON FR.InvoiceID = SI.InvoiceID 
	--	AND FR.LineItemID = SI.LineItemID

WHERE S.InvoiceTypeID IS NULL
AND S.BusinessDate &gt; @FilterRainDate
')
</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{15B8E830-B5B9-43EF-9B89-1D20005073C9}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="VR_DeleteFactSaleReturn">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{59A5D5B0-E07A-4821-B166-ACAD459480E1}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="VR_FillSaleInfo_CheckCustomerExists">
          <DTS:VariableValue
            DTS:DataType="8">
 SELECT *
		
	FROM OPENQUERY( [10.15.20.231\RWP_2022] , 
		
		'DECLARE @FilterRainDate DateTime ,
				
		                   @DateNow DATETIME 

		

		SET @FilterRainDate =  CAST( ''2/12/2025 6:02:04 PM''  AS DATE) 
		
		SET @DateNow = GETDATE()


	
		
		SELECT
	S.CustomerID 
	FROM  [RWP_Sale_DB_Bakhshi].[dbo].SaleInvoice S WITH(NOLOCK)
	 WHERE CustomerID IS NOT NULL 
	--	 WHERE S.BusinessDate &gt; @FilterRainDate

		GROUP BY CustomerID
	
	')


</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:LoggingOptions
        DTS:FilterKind="0">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,13,OnPostExecute</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_FillSaleInfo.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{810B80C8-C0B0-4F74-86FF-446C36591998}"
          DTS:EventID="1677746432"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{939B9DD5-518C-4B75-BFCF-5DF634A0F09B}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_FillSaleInfo.EventHandlers[OnError]\Pkg_FillSaleInfo_OnError"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{278D9273-D04F-42D5-8D60-C74FAFB19544}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillSaleInfo_OnError">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_f94669d292ae47e9a4e6db50d7c08fb1"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::PackageName, System::SourceName, System::ExecutionInstanceGUID, System::ErrorCode, System::ErrorDescription, System::TaskName, User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_f94669d292ae47e9a4e6db50d7c08fb1.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5676538a-2fcf-41b7-9446-b54e7da9d5fd}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f94669d292ae47e9a4e6db50d7c08fb1</RootNamespace>
    <AssemblyName>ST_f94669d292ae47e9a4e6db50d7c08fb1</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f94669d292ae47e9a4e6db50d7c08fb1.Properties.Settings.get_Default():ST_f94669d292ae47e9a4e6db50d7c08fb1.Properties.Sett" +
    "ings")]

namespace ST_f94669d292ae47e9a4e6db50d7c08fb1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_f94669d292ae47e9a4e6db50d7c08fb1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 متغیرهای لاگ خطا
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString();
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string errorCode = Dts.Variables["System::ErrorCode"].Value.ToString();
                string errorDesc = Dts.Variables["System::ErrorDescription"].Value.ToString();
                string status = "FAILED";

                // 🔹 ساخت مسیر فایل لاگ
                string logFileName = $"SSIS_Pkg_FillSaleInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine($"Error Code    : {errorCode}");
                    sw.WriteLine($"Error Message : {errorDesc}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 لاگ خطای ثانویه
                string fallbackPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Exception in OnError Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillSaleInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(fallbackPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);
                bool fireAgain = true;
                Dts.Events.FireError(0, "OnError Event Handler Script", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_f94669d292ae47e9a4e6db50d7c08fb1</msb:CodeName>
    <msb:DisplayName>ST_f94669d292ae47e9a4e6db50d7c08fb1</msb:DisplayName>
    <msb:ProjectId>{7B8F3BFC-5F6C-4040-BA73-5CC5D6A34703}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_f94669d292ae47e9a4e6db50d7c08fb1.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f94669d292ae47e9a4e6db50d7c08fb1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f94669d292ae47e9a4e6db50d7c08fb1")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f94669d292ae47e9a4e6db50d7c08fb1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f94669d292ae47e9a4e6db50d7c08fb1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f94669d292ae47e9a4e6db50d7c08fb1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f94669d292ae47e9a4e6db50d7c08fb1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f94669d292ae47e9a4e6db50d7c08fb1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_f94669d292ae47e9a4e6db50d7c08fb1.dll">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
VFMAdmFsdWVfXwBtc2NvcmxpYgBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUARmlsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRl
TGluZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2Y5NDY2OWQyOTJhZTQ3
ZTlhNGU2ZGI1MGQ3YzA4ZmIxLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZjk0NjY5ZDI5MmFlNDdlOWE0ZTZk
YjUwZDdjMDhmYjEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2Y5NDY2OWQyOTJhZTQ3ZTlhNGU2ZGI1MGQ3YzA4ZmIxLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4
aXN0cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABBcHBl
bmRBbGxUZXh0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAAAAALVUAcwBl
AHIAOgA6AFYAUgBfAEwAbwBnAEYAbwBsAGQAZQByAFAAYQB0AGgAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBt
AGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAA7UwB5AHMAdABlAG0AOgA6AEUA
eABlAGMAdQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBHAFUASQBEAAAjUwB5AHMAdABlAG0AOgA6
AEUAcgByAG8AcgBDAG8AZABlAAAxUwB5AHMAdABlAG0AOgA6AEUAcgByAG8AcgBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAA1GAEEASQBMAEUARAAAVVMAUwBJAFMAXwBQAGsAZwBfAEYAaQBsAGwAUwBh
AGwAZQBJAG4AZgBvAF8ATABvAGcAXwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQAfQAuAGwAbwBnAABl
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAAFPRABhAHQAZQBUAGkA
bQBlACAAIAAgACAAIAAgADoAIAB7ADAAOgB5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBt
ADoAcwBzAH0AASFQAGEAYwBrAGEAZwBlACAATgBhAG0AZQAgACAAOgAgAAAhUwBvAHUAcgBjAGUA
IABUAGEAcwBrACAAIAAgADoAIAAAIVMAYwByAGkAcAB0ACAAVABhAHMAawAgACAAIAA6ACAAACFF
AHgAZQBjAHUAdABpAG8AbgAgAEkARAAgACAAOgAgAAAhUwB0AGEAdAB1AHMAIAAgACAAIAAgACAA
IAAgADoAIAAAIUUAcgByAG8AcgAgAEMAbwBkAGUAIAAgACAAIAA6ACAAACFFAHIAcgBvAHIAIABN
AGUAcwBzAGEAZwBlACAAOgAgAABXWwB7ADAAfQBdACAARQB4AGMAZQBwAHQAaQBvAG4AIABpAG4A
IABPAG4ARQByAHIAbwByACAAUwBjAHIAaQBwAHQAOgAKAHsAMQB9AAoAewAyAH0ACgAAYUUAeABj
AGUAcAB0AGkAbwBuAF8AUwBTAEkAUwBfAFAAawBnAF8ARgBpAGwAbABTAGEAbABlAEkAbgBmAG8A
XwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQAfQAuAGwAbwBnAAA5TwBuAEUAcgByAG8AcgAgAEUAdgBl
AG4AdAAgAEgAYQBuAGQAbABlAHIAIABTAGMAcgBpAHAAdAAAAQBxUwBUAF8AZgA5ADQANgA2ADkA
ZAAyADkAMgBhAGUANAA3AGUAOQBhADQAZQA2AGQAYgA1ADAAZAA3AGMAMAA4AGYAYgAxAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAA3EGtTXdDWSIYPt4hWwN0e
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZEQcNDg4ODg4ODg4OEj0SQQ4OBCAAEmkEIAASbQUg
ARJxHAMgABwDIAAOBAABAg4FAAESeQ4EAAARfQUAAg4OHAUAAg4ODgUgAgEOAgcABA4OHBwcBQAC
AQ4OBSAAEoCVCCAFAggODg4ICAABEoCZEYCdBSAAEoChByACAQ4SgKEIt3pcVhk04IkIiYRdzYCA
zJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQAgYIAwYRFAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEE
CAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NUX2Y5NDY2OWQyOTJhZTQ3ZTlhNGU2ZGI1MGQ3YzA4ZmIxAAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMjUAAE0BABwuTkVURnJhbWV3b3JrLFZlcnNpb249djQuNy4yAQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29yayA0LjcuMgC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA+DUA
AAAAAAAAAAAAEjYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ2AAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAKl7PSQAAAEAqXs9JD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AZgA5ADQANgA2ADkAZAAyADkAMgBhAGUANAA3AGUAOQBhADQAZQA2AGQAYgA1ADAAZAA3
AGMAMAA4AGYAYgAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA3ADcALgAzADEANgA1ADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AZgA5ADQANgA2ADkAZAAyADkAMgBhAGUANAA3AGUAOQBhADQAZQA2AGQAYgA1ADAAZAA3AGMA
MAA4AGYAYgAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBmADkANAA2ADYAOQBkADIAOQAyAGEAZQA0ADcAZQA5AGEANABlADYAZABiADUA
MABkADcAYwAwADgAZgBiADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AZgA5ADQANgA2ADkAZAAyADkAMgBhAGUANAA3AGUAOQBhADQAZQA2AGQAYgA1ADAA
ZAA3AGMAMAA4AGYAYgAxAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIANwA3AC4AMwAxADYANQA3AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIANwA3AC4AMwAxADYANQA3AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACQ2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_FillSaleInfo.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{A410D017-C13D-4AC1-B363-041A5475FA0A}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{A82A9E40-411B-4484-B473-3FDCBCBA0E34}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_FillSaleInfo.EventHandlers[OnPostExecute]\Pkg_FillSaleInfo_PostExecute"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{0E633EC3-D626-4DAA-B0E6-03E857972201}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillSaleInfo_PostExecute">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_1a0580642e2f47da9c7167680c8a0d03"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,System::SourceName,System::ExecutionInstanceGUID,System::PackageName,System::StartTime,User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1a0580642e2f47da9c7167680c8a0d03.Properties.Settings.get_Default():ST_1a0580642e2f47da9c7167680c8a0d03.Properties.Sett" +
    "ings")]

namespace ST_1a0580642e2f47da9c7167680c8a0d03.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_1a0580642e2f47da9c7167680c8a0d03
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 خواندن متغیرهای سیستمی
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString(); // Task اصلی
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();   // خود Script Task
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string status = "Success"; // چون PostExecute اجرا شده، یعنی موفق بوده

                // 🔹 ساخت نام فایل لاگ به صورت روزانه
                string logFileName = $"SSIS_Pkg_FillSaleInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 ثبت خطا در فایل پشتیبان
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Error in Event Handler Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillSaleInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);

                // 🔴 ثبت خطا در SSIS Event
                bool fireAgain = true;
                Dts.Events.FireError(0, "Event Handler Script Error", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_1a0580642e2f47da9c7167680c8a0d03</msb:CodeName>
    <msb:DisplayName>ST_1a0580642e2f47da9c7167680c8a0d03</msb:DisplayName>
    <msb:ProjectId>{96DF864C-6652-443D-8585-8BA3BF64BC1D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_1a0580642e2f47da9c7167680c8a0d03.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1a0580642e2f47da9c7167680c8a0d03")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1a0580642e2f47da9c7167680c8a0d03")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="ST_1a0580642e2f47da9c7167680c8a0d03.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{66c7c74f-39f6-4479-bf11-f8a40f27ee2c}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1a0580642e2f47da9c7167680c8a0d03</RootNamespace>
    <AssemblyName>ST_1a0580642e2f47da9c7167680c8a0d03</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1a0580642e2f47da9c7167680c8a0d03.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1a0580642e2f47da9c7167680c8a0d03.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1a0580642e2f47da9c7167680c8a0d03.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1a0580642e2f47da9c7167680c8a0d03.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1a0580642e2f47da9c7167680c8a0d03.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_1a0580642e2f47da9c7167680c8a0d03.dll">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
BwADAQAAygUAAEUABAAKABEAEAS1ABEAMQG5ABEAdwC9AAYGVwDBAFaAugXEAFaAEQHEAFAgAAAA
AIYAIgQGAAEAwCIAAAAAhhjRBAYAAQDIIgAAAACDGNEEBgABANAiAAAAAJMIhwTIAAEA/CIAAAAA
kwgZAc0AAQADIwAAAACTCCUB0gABAAsjAAAAAJYI/wXYAAIAEiMAAAAAhhjRBAYAAgAaIwAAAACR
GNcE3QACAAAAAQA1AwkA0QQBABEA0QQGABkA0QQKACkA0QQQADEA0QQQADkA0QQQAEEA0QQQAEkA
0QQQAFEA0QQQAFkA0QQQAGEA0QQQAGkA0QQGAJEA0QQGALkA0QQVAMkA0QQGAHEAwgUrANEAowUw
ANkA+wM1AOEAKwM7AJkAVQM/AOkA4wVDAOkAPQZIAPkAKAZOAAEB8QVTAAkBBAFZAHkA0QRfABEB
+gAQAAEB6gVZABEB+gAGABkBdQEGANEACwYBAIEAhwA/AIEAaAA/AAEB8QVlACEBGgZtANEA2AVz
ACkBxwR5AHEA0QQGAJkA0QQGADEBugCCADEBMAaLAKEA0QSRAMEA0QQGAAgAFACrAAgAGACwACkA
cwAYAS4ACwDwAC4AEwD5AC4AGwAYAS4AIwAhAS4AKwBKAS4AMwBKAS4AOwBKAS4AQwAhAS4ASwBQ
AS4AUwBKAS4AWwBnAUMAYwCwAEkAcwAYAWEAewCwAGMAawCwABsAAwABAAQAAwAAAIsE4QAAADkB
5gAAAAMG6wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAADgkb1AAAAAAAAABAAAABAAA
AAAAAAAAAAAAmQBfAAAAAAAQAAAAAAAAAAAAAACiAGMDAAAAAAQAAAAAAAAAAAAAAJkABAQAAAAA
EAAAAAAAAAAAAAAAogA4AAAAAAAAAAAAAQAAACIFAAAFAAIAAAAAAABTVF8xYTA1ODA2NDJlMmY0
N2RhOWM3MTY3NjgwYzhhMGQwMwA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3Rh
bmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBXcml0ZUxpbmUAQ29tYmluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8xYTA1
ODA2NDJlMmY0N2RhOWM3MTY3NjgwYzhhMGQwMy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3RyZWFtV3JpdGVyAFRl
eHRXcml0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzFhMDU4MDY0MmUy
ZjQ3ZGE5YzcxNjc2ODBjOGEwZDAzLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF8xYTA1ODA2NDJlMmY0N2RhOWM3MTY3NjgwYzhhMGQwMy5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAQXBwZW5kQWxsVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkA
AAAAAC1VAHMAZQByADoAOgBWAFIAXwBMAG8AZwBGAG8AbABkAGUAcgBQAGEAdABoAAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQBy
AGMAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAO1MAeQBzAHQA
ZQBtADoAOgBFAHgAZQBjAHUAdABpAG8AbgBJAG4AcwB0AGEAbgBjAGUARwBVAEkARAAAD1MAdQBj
AGMAZQBzAHMAAFVTAFMASQBTAF8AUABrAGcAXwBGAGkAbABsAFMAYQBsAGUASQBuAGYAbwBfAEwA
bwBnAF8AewAwADoAeQB5AHkAeQBNAE0AZABkAH0ALgBsAG8AZwAAZS0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQABT0QAYQB0AGUAVABpAG0AZQAgACAAIAAgACAAIAA6
ACAAewAwADoAeQB5AHkAeQAtAE0ATQAtAGQAZAAgAEgASAA6AG0AbQA6AHMAcwB9AAEhUABhAGMA
awBhAGcAZQAgAE4AYQBtAGUAIAAgADoAIAAAIVMAbwB1AHIAYwBlACAAVABhAHMAawAgACAAIAA6
ACAAACFTAGMAcgBpAHAAdAAgAFQAYQBzAGsAIAAgACAAOgAgAAAhRQB4AGUAYwB1AHQAaQBvAG4A
IABJAEQAIAAgADoAIAAAIVMAdABhAHQAdQBzACAAIAAgACAAIAAgACAAIAA6ACAAAFtbAHsAMAB9
AF0AIABFAHIAcgBvAHIAIABpAG4AIABFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByACAAUwBjAHIA
aQBwAHQAOgAKAHsAMQB9AAoAewAyAH0ACgAAYUUAeABjAGUAcAB0AGkAbwBuAF8AUwBTAEkAUwBf
AFAAawBnAF8ARgBpAGwAbABTAGEAbABlAEkAbgBmAG8AXwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQA
fQAuAGwAbwBnAAA1RQB2AGUAbgB0ACAASABhAG4AZABsAGUAcgAgAFMAYwByAGkAcAB0ACAARQBy
AHIAbwByAAABAHFTAFQAXwAxAGEAMAA1ADgAMAA2ADQAMgBlADIAZgA0ADcAZABhADkAYwA3ADEA
NgA3ADYAOAAwAGMAOABhADAAZAAwADMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAAAJQljgx4gHtDtnmHKQydF2MABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkP
BwsODg4ODg4OEj0SQQ4OBCAAEmkEIAASbQUgARJxHAMgABwDIAAOBAABAg4FAAESeQ4EAAARfQUA
Ag4OHAUAAg4ODgUgAgEOAgcABA4OHBwcBQACAQ4OBSAAEoCVCCAFAggODg4ICAABEoCZEYCdBSAA
EoChByACAQ4SgKEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQAgYIAwYR
FAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzFhMDU4MDY0MmUyZjQ3ZGE5
YzcxNjc2ODBjOGEwZDAzAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAE0BABwuTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNy4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1l
d29yayA0LjcuMgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD4NAAAAAAAAAAAAAASNQAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAABDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBvUDgkAAABAG9QOCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADEAYQAwADUAOAAwADYANAAyAGUAMgBmADQANwBkAGEAOQBjADcAMQA2ADcANgA4ADAA
YwA4AGEAMABkADAAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5
ADIANwAyAC4AMgAwADUAOQAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADEAYQAwADUAOAAwADYANAAyAGUAMgBmADQANwBkAGEAOQBjADcAMQA2ADcANgA4ADAAYwA4
AGEAMABkADAAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMQBhADAANQA4ADAANgA0ADIAZQAyAGYANAA3AGQAYQA5AGMANwAxADYANwA2
ADgAMABjADgAYQAwAGQAMAAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADEAYQAwADUAOAAwADYANAAyAGUAMgBmADQANwBkAGEAOQBjADcAMQA2ADcANgA4
ADAAYwA4AGEAMABkADAAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOQAyADcAMgAuADIAMAA1ADkAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADIAMAA1ADkAMQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAkNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Pkg_FillSaleInfo.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run_Pkg_FillStockDocumentInfo"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{EBD36CE9-4B0F-450A-9A29-8554ED9B9C7E}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run_Pkg_FillStockDocumentInfo"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{A5B8027B-40C7-47D6-8B2E-6E90B78320CB}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="DT_SourceFillFactStockDocumentInfo">
          <DTS:VariableValue
            DTS:DataType="8">
SELECT *
		FROM OPENQUERY( [10.15.20.231\RWP_2022] , 
		' 
		DECLARE @FilterRainDate DateTime ,
				@DateNow DATETIME ;

		SET @FilterRainDate =  CAST( ''2/12/2025 6:02:04 PM''  AS DATE) ;
		SET @DateNow = GETDATE();
 
   WITH 
		CalcReferFlag
		AS 
			(
					SELECT 	
							  SD.DocumentID 			 

						FROM [RWP_Sale_DB_Bakhshi].[DBO].StockDocument SD WITH(NOLOCK)			
								LEFT JOIN [RWP_Sale_DB_Bakhshi].[DBO].StockDocumentReference SR  WITH(NOLOCK)	
									ON  SR.ReferDocumentID = SD.DocumentID   
								LEFT JOIN [RWP_Sale_DB_Bakhshi].[DBO].StockDocument SDR  WITH(NOLOCK)	
									ON SDR.DocumentID = SR.DocumentID
						WHERE	  SD.StatusID = 246 				 
								 AND SD.DocumentTypeID = 362
								 AND (SDR.DocumentID IS NULL  OR SDR.StatusID &lt;&gt; 246  )						
			
			)

	SELECT	 CompanyID =  1
			, D.BookerStoreID
			, D.BookerWorkstationID
			, D.DocumentID
			, DI.LineItemID
			, D.DocumentTypeID
			, DocumentDate = CAST(REPLACE(CAST(CAST(D.DocumentDate AS DATE) AS NVARCHAR), ''-'', '''') AS INT)
			, FinanceApprove
			, D.StatusID
			, SourceStoreID
			, SourceStockID
			, TargetStoreID
			, TargetStockID
			, D.SupplierID
			, ThirdPartyID
			, ItemID
			, ReasonID
			, DepartmentID
			, UsageTypeID
			, LastUnitCount
			, ScannedCount
			, PackUnitCount
			, PackCount
			, UnitCount
			, DamagedCount
			, BonusCount
			, RemindCount
			, Cost
			, DI.Discount
			, SupplierDiscount
			, Tax
			, Toll
			, PositiveCost
			, NegativeCost
			, NetCost
			, SalePrice
			, SC.ContractID
			, SC.ContractTypeID
			, Count1
			, Count2
			, Discount1
			, Discount2
			, Discount3
			, Discount4
			, Discount5
			, EtlTime =@DateNow
			, IsRefer = CASE WHEN CRF.DocumentID IS NULL 
								 THEN 1
							ELSE 0
							END 
			, D.DocumentCode 

	FROM [RWP_Sale_DB_Bakhshi].[dbo].StockDocumentView D WITH(NOLOCK)
		INNER JOIN [RWP_Sale_DB_Bakhshi].[dbo].StockDocumentLineItem DI WITH(NOLOCK)
			ON D.BookerStoreID = DI.BookerStoreID
			AND D.BookerWorkstationID = DI.BookerWorkstationID
			AND D.DocumentID = DI.DocumentID

		LEFT JOIN CalcReferFlag CRF 
			ON CRF.DocumentID = D.DocumentID

		LEFT JOIN [RWP_Sale_DB_Bakhshi].[dbo].StockDocumentLineItemContract DIC WITH(NOLOCK)
			ON DI.BookerStoreID = DIC.BookerStoreID
			AND DI.BookerWorkstationID = DIC.BookerWorkstationID
			AND DI.DocumentID = DIC.DocumentID
			AND DI.LineItemID = DIC.LineItemID

		LEFT JOIN [RWP_Sale_DB_Bakhshi].[dbo].SupplierContract SC WITH(NOLOCK)
			ON DIC.ContractID = SC.ContractID

		LEFT JOIN [RWP_Sale_DB_Bakhshi].[dbo].StockDocumentLineItemCustomDiscount DID WITH(NOLOCK)
			ON DI.BookerStoreID = DID.BookerStoreID
			AND DI.BookerWorkstationID = DID.BookerWorkstationID
			AND DI.DocumentID = DID.DocumentID
			AND DI.LineItemID = DID.LineItemID
	WHERE D.StatusID = 246
	AND D.DocumentLanguage = 314

	AND D.DocumentDate &gt; @FilterRainDate')</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{E0A36D97-46D3-426B-9F7D-34D4CA8B41A9}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="VR_Seq_FilllStockInfo_01_FillDimStock">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{D5C21AF6-3DED-4EB5-84B1-111607F67077}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="VR_Seq_FilllStockInfo_02_DeleteStockDocument">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{B7FF9241-0EE5-4B3E-81FB-662A71D94A58}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="VR_Seq_FilllStockInfo_03_UpDateRefStatus">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:LoggingOptions
        DTS:FilterKind="0">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,13,OnPostExecute</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_FillStockDocumentInfo.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{66CA72B9-19C4-45BE-9D55-C0A2033A09A6}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{21D17932-B27C-4AF5-AB84-2284EABC22F3}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_FillStockDocumentInfo.EventHandlers[OnError]\Pkg_FillStockDocumentInfo_OnError"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{279B9DBF-890B-4401-A84C-3E845ACF53B0}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillStockDocumentInfo_OnError">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_a5f2c30db72d406bbda48a6dc0f5e2ce"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::PackageName, System::SourceName, System::ExecutionInstanceGUID, System::ErrorCode, System::ErrorDescription, System::TaskName, User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a5f2c30db72d406bbda48a6dc0f5e2ce.Properties.Settings.get_Default():ST_a5f2c30db72d406bbda48a6dc0f5e2ce.Properties.Sett" +
    "ings")]

namespace ST_a5f2c30db72d406bbda48a6dc0f5e2ce.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_a5f2c30db72d406bbda48a6dc0f5e2ce
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 متغیرهای لاگ خطا
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString();
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string errorCode = Dts.Variables["System::ErrorCode"].Value.ToString();
                string errorDesc = Dts.Variables["System::ErrorDescription"].Value.ToString();
                string status = "FAILED";

                // 🔹 ساخت مسیر فایل لاگ
                string logFileName = $"SSIS_Pkg_FillStockDocumentInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine($"Error Code    : {errorCode}");
                    sw.WriteLine($"Error Message : {errorDesc}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 لاگ خطای ثانویه
                string fallbackPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Exception in OnError Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillStockDocumentInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(fallbackPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);
                bool fireAgain = true;
                Dts.Events.FireError(0, "OnError Event Handler Script", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_a5f2c30db72d406bbda48a6dc0f5e2ce.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3811f4f2-96d6-4ca2-aa45-ab28b635b751}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a5f2c30db72d406bbda48a6dc0f5e2ce</RootNamespace>
    <AssemblyName>ST_a5f2c30db72d406bbda48a6dc0f5e2ce</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_a5f2c30db72d406bbda48a6dc0f5e2ce</msb:CodeName>
    <msb:DisplayName>ST_a5f2c30db72d406bbda48a6dc0f5e2ce</msb:DisplayName>
    <msb:ProjectId>{BC655921-2CDC-4AF3-A851-1806E697DE89}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a5f2c30db72d406bbda48a6dc0f5e2ce.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a5f2c30db72d406bbda48a6dc0f5e2ce")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a5f2c30db72d406bbda48a6dc0f5e2ce")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a5f2c30db72d406bbda48a6dc0f5e2ce.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a5f2c30db72d406bbda48a6dc0f5e2ce.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a5f2c30db72d406bbda48a6dc0f5e2ce.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a5f2c30db72d406bbda48a6dc0f5e2ce.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a5f2c30db72d406bbda48a6dc0f5e2ce.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_a5f2c30db72d406bbda48a6dc0f5e2ce.dll">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
MDZiYmRhNDhhNmRjMGY1ZTJjZQBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUARmlsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRl
TGluZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2E1ZjJjMzBkYjcyZDQw
NmJiZGE0OGE2ZGMwZjVlMmNlLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTVmMmMzMGRiNzJkNDA2YmJkYTQ4
YTZkYzBmNWUyY2UuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2E1ZjJjMzBkYjcyZDQwNmJiZGE0OGE2ZGMwZjVlMmNlLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4
aXN0cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABBcHBl
bmRBbGxUZXh0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAAAAALVUAcwBl
AHIAOgA6AFYAUgBfAEwAbwBnAEYAbwBsAGQAZQByAFAAYQB0AGgAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBt
AGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAA7UwB5AHMAdABlAG0AOgA6AEUA
eABlAGMAdQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBHAFUASQBEAAAjUwB5AHMAdABlAG0AOgA6
AEUAcgByAG8AcgBDAG8AZABlAAAxUwB5AHMAdABlAG0AOgA6AEUAcgByAG8AcgBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAA1GAEEASQBMAEUARAAAZ1MAUwBJAFMAXwBQAGsAZwBfAEYAaQBsAGwAUwB0
AG8AYwBrAEQAbwBjAHUAbQBlAG4AdABJAG4AZgBvAF8ATABvAGcAXwB7ADAAOgB5AHkAeQB5AE0A
TQBkAGQAfQAuAGwAbwBnAABlLQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAAFPRABhAHQAZQBUAGkAbQBlACAAIAAgACAAIAAgADoAIAB7ADAAOgB5AHkAeQB5AC0ATQBN
AC0AZABkACAASABIADoAbQBtADoAcwBzAH0AASFQAGEAYwBrAGEAZwBlACAATgBhAG0AZQAgACAA
OgAgAAAhUwBvAHUAcgBjAGUAIABUAGEAcwBrACAAIAAgADoAIAAAIVMAYwByAGkAcAB0ACAAVABh
AHMAawAgACAAIAA6ACAAACFFAHgAZQBjAHUAdABpAG8AbgAgAEkARAAgACAAOgAgAAAhUwB0AGEA
dAB1AHMAIAAgACAAIAAgACAAIAAgADoAIAAAIUUAcgByAG8AcgAgAEMAbwBkAGUAIAAgACAAIAA6
ACAAACFFAHIAcgBvAHIAIABNAGUAcwBzAGEAZwBlACAAOgAgAABXWwB7ADAAfQBdACAARQB4AGMA
ZQBwAHQAaQBvAG4AIABpAG4AIABPAG4ARQByAHIAbwByACAAUwBjAHIAaQBwAHQAOgAKAHsAMQB9
AAoAewAyAH0ACgAAc0UAeABjAGUAcAB0AGkAbwBuAF8AUwBTAEkAUwBfAFAAawBnAF8ARgBpAGwA
bABTAHQAbwBjAGsARABvAGMAdQBtAGUAbgB0AEkAbgBmAG8AXwB7ADAAOgB5AHkAeQB5AE0ATQBk
AGQAfQAuAGwAbwBnAAA5TwBuAEUAcgByAG8AcgAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIA
IABTAGMAcgBpAHAAdAAAAQBxUwBUAF8AYQA1AGYAMgBjADMAMABkAGIANwAyAGQANAAwADYAYgBi
AGQAYQA0ADgAYQA2AGQAYwAwAGYANQBlADIAYwBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAAAAAAf/0KBTj0PSaZV6oJMTRyYAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFZEQcNDg4ODg4ODg4OEj0SQQ4OBCAAEmkEIAASbQUgARJxHAMgABwDIAAOBAABAg4FAAES
eQ4EAAARfQUAAg4OHAUAAg4ODgUgAgEOAgcABA4OHBwcBQACAQ4OBSAAEoCVCCAFAggODg4ICAAB
EoCZEYCdBSAAEoChByACAQ4SgKEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUD
BhIQAgYIAwYRFAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2E1ZjJjMzBk
YjcyZDQwNmJiZGE0OGE2ZGMwZjVlMmNlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAE0B
ABwuTkVURnJhbWV3b3JrLFZlcnNpb249djQuNy4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQu
TkVUIEZyYW1ld29yayA0LjcuMgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAHDYAAAAAAAAAAAAANjYAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAACg2AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAJ9PSQAAAEAAn09JD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AYQA1AGYAMgBjADMAMABkAGIANwAyAGQANAAwADYAYgBiAGQAYQA0ADgAYQA2AGQAYwAw
AGYANQBlADIAYwBlAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA3ADcALgAzADIAMAAwADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AYQA1AGYAMgBjADMAMABkAGIANwAyAGQANAAwADYAYgBiAGQAYQA0ADgAYQA2AGQAYwAwAGYA
NQBlADIAYwBlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBhADUAZgAyAGMAMwAwAGQAYgA3ADIAZAA0ADAANgBiAGIAZABhADQAOABhADYA
ZABjADAAZgA1AGUAMgBjAGUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AYQA1AGYAMgBjADMAMABkAGIANwAyAGQANAAwADYAYgBiAGQAYQA0ADgAYQA2AGQA
YwAwAGYANQBlADIAYwBlAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIANwA3AC4AMwAyADAAMAAyAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIANwA3AC4AMwAyADAAMAAyAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAEg2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_FillStockDocumentInfo.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{C23A883C-2E4E-4334-9965-285E65330167}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{6107DEB7-594A-484A-B841-E94335C7B131}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_FillStockDocumentInfo.EventHandlers[OnPostExecute]\Pkg_FillStockDocumentInfo_PostExecute"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{D5A3216F-4A75-49FC-A2FB-DE520F374336}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillStockDocumentInfo_PostExecute">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_4c5e22987792457f921615f7f32ff12c"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,System::SourceName,System::ExecutionInstanceGUID,System::PackageName,System::StartTime,User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4c5e22987792457f921615f7f32ff12c.Properties.Settings.get_Default():ST_4c5e22987792457f921615f7f32ff12c.Properties.Sett" +
    "ings")]

namespace ST_4c5e22987792457f921615f7f32ff12c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_4c5e22987792457f921615f7f32ff12c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 خواندن متغیرهای سیستمی
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString(); // Task اصلی
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();   // خود Script Task
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string status = "Success"; // چون PostExecute اجرا شده، یعنی موفق بوده

                // 🔹 ساخت نام فایل لاگ به صورت روزانه
                string logFileName = $"SSIS_Pkg_FillStockDocumentInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 ثبت خطا در فایل پشتیبان
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Error in Event Handler Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillStockDocumentInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);

                // 🔴 ثبت خطا در SSIS Event
                bool fireAgain = true;
                Dts.Events.FireError(0, "Event Handler Script Error", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_4c5e22987792457f921615f7f32ff12c.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2B9C6D1C-18F5-4571-BED6-C610205DA991}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4c5e22987792457f921615f7f32ff12c</RootNamespace>
    <AssemblyName>ST_4c5e22987792457f921615f7f32ff12c</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_4c5e22987792457f921615f7f32ff12c</msb:CodeName>
    <msb:DisplayName>ST_4c5e22987792457f921615f7f32ff12c</msb:DisplayName>
    <msb:ProjectId>{F5177BCE-B2C1-4478-B15F-4154351D783A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4c5e22987792457f921615f7f32ff12c.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4c5e22987792457f921615f7f32ff12c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4c5e22987792457f921615f7f32ff12c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4c5e22987792457f921615f7f32ff12c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4c5e22987792457f921615f7f32ff12c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4c5e22987792457f921615f7f32ff12c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4c5e22987792457f921615f7f32ff12c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4c5e22987792457f921615f7f32ff12c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_4c5e22987792457f921615f7f32ff12c.dll">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
BwADAQAAygUAAEUABAAKABEAEAS1ABEAMQG5ABEAdwC9AAYGMwDBAFaAugXEAFaAEQHEAFAgAAAA
AIYAIgQGAAEAwCIAAAAAhhjRBAYAAQDIIgAAAACDGNEEBgABANAiAAAAAJMIhwTIAAEA/CIAAAAA
kwgZAc0AAQADIwAAAACTCCUB0gABAAsjAAAAAJYI/wXYAAIAEiMAAAAAhhjRBAYAAgAaIwAAAACR
GNcE3QACAAAAAQA1AwkA0QQBABEA0QQGABkA0QQKACkA0QQQADEA0QQQADkA0QQQAEEA0QQQAEkA
0QQQAFEA0QQQAFkA0QQQAGEA0QQQAGkA0QQGAJEA0QQGALkA0QQVAMkA0QQGAHEAwgUrANEAowUw
ANkA+wM1AOEAKwM7AJkAVQM/AOkA4wVDAOkAPQZIAPkAKAZOAAEB8QVTAAkBBAFZAHkA0QRfABEB
+gAQAAEB6gVZABEB+gAGABkBdQEGANEACwYBAIEAhwA/AIEAaAA/AAEB8QVlACEBGgZtANEA2AVz
ACkBxwR5AHEA0QQGAJkA0QQGADEBugCCADEBMAaLAKEA0QSRAMEA0QQGAAgAFACrAAgAGACwACkA
cwAYAS4ACwDwAC4AEwD5AC4AGwAYAS4AIwAhAS4AKwBKAS4AMwBKAS4AOwBKAS4AQwAhAS4ASwBQ
AS4AUwBKAS4AWwBnAUMAYwCwAEkAcwAYAWEAewCwAGMAawCwABsAAwABAAQAAwAAAIsE4QAAADkB
5gAAAAMG6wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAADgkFVEAAAAAAABEAAAABAAA
AAAAAAAAAAAAmQA7AAAAAAAQAAAAAAAAAAAAAACiAGMDAAAAAAQAAAAAAAAAAAAAAJkABAQAAAAA
EAAAAAAAAAAAAAAAogAUAAAAAAAAAAAAAQAAACIFAAAFAAIAAAAAAAA8TW9kdWxlPgBTeXN0ZW0u
SU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU1RfNGM1
ZTIyOTg3NzkyNDU3ZjkyMTYxNWY3ZjMyZmYxMmMAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3Rh
bmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBXcml0ZUxpbmUAQ29tYmluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF80YzVl
MjI5ODc3OTI0NTdmOTIxNjE1ZjdmMzJmZjEyYy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3RyZWFtV3JpdGVyAFRl
eHRXcml0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzRjNWUyMjk4Nzc5
MjQ1N2Y5MjE2MTVmN2YzMmZmMTJjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF80YzVlMjI5ODc3OTI0NTdmOTIxNjE1ZjdmMzJmZjEyYy5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAQXBwZW5kQWxsVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkA
AAAAAC1VAHMAZQByADoAOgBWAFIAXwBMAG8AZwBGAG8AbABkAGUAcgBQAGEAdABoAAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQBy
AGMAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAO1MAeQBzAHQA
ZQBtADoAOgBFAHgAZQBjAHUAdABpAG8AbgBJAG4AcwB0AGEAbgBjAGUARwBVAEkARAAAD1MAdQBj
AGMAZQBzAHMAAGdTAFMASQBTAF8AUABrAGcAXwBGAGkAbABsAFMAdABvAGMAawBEAG8AYwB1AG0A
ZQBuAHQASQBuAGYAbwBfAEwAbwBnAF8AewAwADoAeQB5AHkAeQBNAE0AZABkAH0ALgBsAG8AZwAA
ZS0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQABT0QAYQB0AGUAVABp
AG0AZQAgACAAIAAgACAAIAA6ACAAewAwADoAeQB5AHkAeQAtAE0ATQAtAGQAZAAgAEgASAA6AG0A
bQA6AHMAcwB9AAEhUABhAGMAawBhAGcAZQAgAE4AYQBtAGUAIAAgADoAIAAAIVMAbwB1AHIAYwBl
ACAAVABhAHMAawAgACAAIAA6ACAAACFTAGMAcgBpAHAAdAAgAFQAYQBzAGsAIAAgACAAOgAgAAAh
RQB4AGUAYwB1AHQAaQBvAG4AIABJAEQAIAAgADoAIAAAIVMAdABhAHQAdQBzACAAIAAgACAAIAAg
ACAAIAA6ACAAAFtbAHsAMAB9AF0AIABFAHIAcgBvAHIAIABpAG4AIABFAHYAZQBuAHQAIABIAGEA
bgBkAGwAZQByACAAUwBjAHIAaQBwAHQAOgAKAHsAMQB9AAoAewAyAH0ACgAAc0UAeABjAGUAcAB0
AGkAbwBuAF8AUwBTAEkAUwBfAFAAawBnAF8ARgBpAGwAbABTAHQAbwBjAGsARABvAGMAdQBtAGUA
bgB0AEkAbgBmAG8AXwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQAfQAuAGwAbwBnAAA1RQB2AGUAbgB0
ACAASABhAG4AZABsAGUAcgAgAFMAYwByAGkAcAB0ACAARQByAHIAbwByAAABAHFTAFQAXwA0AGMA
NQBlADIAMgA5ADgANwA3ADkAMgA0ADUANwBmADkAMgAxADYAMQA1AGYANwBmADMAMgBmAGYAMQAy
AGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAM5+54I3B3lP
rShR3Bu1WV8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkPBwsODg4ODg4OEj0SQQ4OBCAAEmkE
IAASbQUgARJxHAMgABwDIAAOBAABAg4FAAESeQ4EAAARfQUAAg4OHAUAAg4ODgUgAgEOAgcABA4O
HBwcBQACAQ4OBSAAEoCVCCAFAggODg4ICAABEoCZEYCdBSAAEoChByACAQ4SgKEIt3pcVhk04IkI
iYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQAgYIAwYRFAQAABJRBAAAElUFAAEBElUEAAAS
EAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NUXzRjNWUyMjk4Nzc5MjQ1N2Y5MjE2MTVmN2YzMmZmMTJjAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAE0BABwuTkVURnJhbWV3b3JrLFZlcnNpb249djQuNy4y
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29yayA0LjcuMgAAALQAAADOyu++
AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNp
b249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
MDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFE
ULQAAAAcNQAAAAAAAAAAAAA2NQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKDUAAAAAAAAAAAAA
AABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAVUTgkAAABABVROCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADQAYwA1AGUAMgAyADkAOAA3ADcAOQAyADQANQA3AGYAOQAyADEANgAxADUAZgA3AGYA
MwAyAGYAZgAxADIAYwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5
ADIANwAyAC4AMgAwADcANQA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADQAYwA1AGUAMgAyADkAOAA3ADcAOQAyADQANQA3AGYAOQAyADEANgAxADUAZgA3AGYAMwAy
AGYAZgAxADIAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANABjADUAZQAyADIAOQA4ADcANwA5ADIANAA1ADcAZgA5ADIAMQA2ADEANQBm
ADcAZgAzADIAZgBmADEAMgBjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADQAYwA1AGUAMgAyADkAOAA3ADcAOQAyADQANQA3AGYAOQAyADEANgAxADUAZgA3
AGYAMwAyAGYAZgAxADIAYwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOQAyADcAMgAuADIAMAA3ADUANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADIAMAA3ADUANwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABINQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Pkg_FillStockDocumentInfo.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run_Pkg_FilltemInfo"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{D08D14AA-B561-4C8D-BAE2-C4AB30B7669D}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run_Pkg_FilltemInfo"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{349B90EF-3C07-4045-BC79-F36CB4FDFFDE}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="DT_SourceFillItemInfo">
          <DTS:VariableValue
            DTS:DataType="8">
SELECT ItemID, DepartmentID, Name, Barcode, ReportGroupID, TaxGroupID FROM  [10.15.20.231\RWP_2022].[RWP_Sale_DB_Bakhshi].[dbo].ItemForMobileView X
WHERE NOT EXISTS (SELECT * FROM dbo.DimItem WHERE ItemID = X.ItemID)
AND x.LanguageID = 314
</DTS:VariableValue>
        </DTS:Variable>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{F37730BD-6972-4B62-ACAE-D7D7F59458A8}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="VR_FilltemBaseIfno_01_DimDepartment">
          <DTS:VariableValue
            DTS:DataType="8"
            xml:space="preserve"></DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:LoggingOptions
        DTS:FilterKind="0">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,13,OnPostExecute</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_FilltemInfo.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{659C087E-DB11-4EDD-B509-EC308B56B37F}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{BD8326E3-9000-42AD-840E-FC425BF77763}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_FilltemInfo.EventHandlers[OnError]\Pkg_FillItemInfo_OnError"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{C48D0DC3-9444-4C05-8EC8-FE0DDF3BC932}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillItemInfo_OnError">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_ed1d111d4bc1419dbc72de6b9efb1897"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::PackageName, System::SourceName, System::ExecutionInstanceGUID, System::ErrorCode, System::ErrorDescription, System::TaskName, User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ed1d111d4bc1419dbc72de6b9efb1897")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ed1d111d4bc1419dbc72de6b9efb1897")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_ed1d111d4bc1419dbc72de6b9efb1897
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 متغیرهای لاگ خطا
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString();
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string errorCode = Dts.Variables["System::ErrorCode"].Value.ToString();
                string errorDesc = Dts.Variables["System::ErrorDescription"].Value.ToString();
                string status = "FAILED";

                // 🔹 ساخت مسیر فایل لاگ
                string logFileName = $"SSIS_Pkg_FillItemInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine($"Error Code    : {errorCode}");
                    sw.WriteLine($"Error Message : {errorDesc}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 لاگ خطای ثانویه
                string fallbackPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Exception in OnError Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillItemInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(fallbackPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);
                bool fireAgain = true;
                Dts.Events.FireError(0, "OnError Event Handler Script", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_ed1d111d4bc1419dbc72de6b9efb1897.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9D729AF2-E7BD-4C6D-8A78-1F89E91665AE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ed1d111d4bc1419dbc72de6b9efb1897</RootNamespace>
    <AssemblyName>ST_ed1d111d4bc1419dbc72de6b9efb1897</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ed1d111d4bc1419dbc72de6b9efb1897</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ed1d111d4bc1419dbc72de6b9efb1897</msb:DisplayName>
    <msb:ProjectId>{C81CEA3C-BFA5-45FB-9937-08753C9CE3AA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ed1d111d4bc1419dbc72de6b9efb1897.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ed1d111d4bc1419dbc72de6b9efb1897.Properties.Settings.get_Default():ST_ed1d111d4bc1419dbc72de6b9efb1897.Properties.Sett" +
    "ings")]

namespace ST_ed1d111d4bc1419dbc72de6b9efb1897.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ed1d111d4bc1419dbc72de6b9efb1897.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ed1d111d4bc1419dbc72de6b9efb1897.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ed1d111d4bc1419dbc72de6b9efb1897.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ed1d111d4bc1419dbc72de6b9efb1897.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ed1d111d4bc1419dbc72de6b9efb1897.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_ed1d111d4bc1419dbc72de6b9efb1897.dll">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
VFMAdmFsdWVfXwBtc2NvcmxpYgBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUARmlsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRl
TGluZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2VkMWQxMTFkNGJjMTQx
OWRiYzcyZGU2YjllZmIxODk3LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZWQxZDExMWQ0YmMxNDE5ZGJjNzJk
ZTZiOWVmYjE4OTcuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2VkMWQxMTFkNGJjMTQxOWRiYzcyZGU2YjllZmIxODk3LlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4
aXN0cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABBcHBl
bmRBbGxUZXh0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAAAAALVUAcwBl
AHIAOgA6AFYAUgBfAEwAbwBnAEYAbwBsAGQAZQByAFAAYQB0AGgAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBt
AGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAA7UwB5AHMAdABlAG0AOgA6AEUA
eABlAGMAdQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBHAFUASQBEAAAjUwB5AHMAdABlAG0AOgA6
AEUAcgByAG8AcgBDAG8AZABlAAAxUwB5AHMAdABlAG0AOgA6AEUAcgByAG8AcgBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAA1GAEEASQBMAEUARAAAVVMAUwBJAFMAXwBQAGsAZwBfAEYAaQBsAGwASQB0
AGUAbQBJAG4AZgBvAF8ATABvAGcAXwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQAfQAuAGwAbwBnAABl
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAAFPRABhAHQAZQBUAGkA
bQBlACAAIAAgACAAIAAgADoAIAB7ADAAOgB5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBt
ADoAcwBzAH0AASFQAGEAYwBrAGEAZwBlACAATgBhAG0AZQAgACAAOgAgAAAhUwBvAHUAcgBjAGUA
IABUAGEAcwBrACAAIAAgADoAIAAAIVMAYwByAGkAcAB0ACAAVABhAHMAawAgACAAIAA6ACAAACFF
AHgAZQBjAHUAdABpAG8AbgAgAEkARAAgACAAOgAgAAAhUwB0AGEAdAB1AHMAIAAgACAAIAAgACAA
IAAgADoAIAAAIUUAcgByAG8AcgAgAEMAbwBkAGUAIAAgACAAIAA6ACAAACFFAHIAcgBvAHIAIABN
AGUAcwBzAGEAZwBlACAAOgAgAABXWwB7ADAAfQBdACAARQB4AGMAZQBwAHQAaQBvAG4AIABpAG4A
IABPAG4ARQByAHIAbwByACAAUwBjAHIAaQBwAHQAOgAKAHsAMQB9AAoAewAyAH0ACgAAYUUAeABj
AGUAcAB0AGkAbwBuAF8AUwBTAEkAUwBfAFAAawBnAF8ARgBpAGwAbABJAHQAZQBtAEkAbgBmAG8A
XwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQAfQAuAGwAbwBnAAA5TwBuAEUAcgByAG8AcgAgAEUAdgBl
AG4AdAAgAEgAYQBuAGQAbABlAHIAIABTAGMAcgBpAHAAdAAAAQBxUwBUAF8AZQBkADEAZAAxADEA
MQBkADQAYgBjADEANAAxADkAZABiAGMANwAyAGQAZQA2AGIAOQBlAGYAYgAxADgAOQA3AC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABmQLciouE4Q4+8wLt/UW/u
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZEQcNDg4ODg4ODg4OEj0SQQ4OBCAAEmkEIAASbQUg
ARJxHAMgABwDIAAOBAABAg4FAAESeQ4EAAARfQUAAg4OHAUAAg4ODgUgAgEOAgcABA4OHBwcBQAC
AQ4OBSAAEoCVCCAFAggODg4ICAABEoCZEYCdBSAAEoChByACAQ4SgKEIt3pcVhk04IkIiYRdzYCA
zJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQAgYIAwYRFAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEE
CAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NUX2VkMWQxMTFkNGJjMTQxOWRiYzcyZGU2YjllZmIxODk3AAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43ALQAAADOyu++AQAAAJEAAABsU3lz
dGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5S
ZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0NQAAAAAA
AAAAAAAONgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYAAAAAAAAAAAAAAABfQ29yRGxsTWFp
bgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAJRTPiQAAAEAlFM+JD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AZQBkADEAZAAxADEAMQBkADQAYgBjADEANAAxADkAZABiAGMANwAyAGQAZQA2AGIAOQBl
AGYAYgAxADgAOQA3AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA3ADgALgAyADEAMwA5ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AZQBkADEAZAAxADEAMQBkADQAYgBjADEANAAxADkAZABiAGMANwAyAGQAZQA2AGIAOQBlAGYA
YgAxADgAOQA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBlAGQAMQBkADEAMQAxAGQANABiAGMAMQA0ADEAOQBkAGIAYwA3ADIAZABlADYA
YgA5AGUAZgBiADEAOAA5ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AZQBkADEAZAAxADEAMQBkADQAYgBjADEANAAxADkAZABiAGMANwAyAGQAZQA2AGIA
OQBlAGYAYgAxADgAOQA3AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIANwA4AC4AMgAxADMAOQA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIANwA4AC4AMgAxADMAOQA2AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_FilltemInfo.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{F84F8C09-6ABD-4A29-B39F-947D5A39D042}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{BE8A3316-6174-45C4-A1AC-0082BA44AFB9}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_FilltemInfo.EventHandlers[OnPostExecute]\Pkg_FillItemInfo_PostExecute"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{18A7B0D6-EE6B-4A44-B00D-1D8878D7F883}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillItemInfo_PostExecute">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_6583ea7583c443aaa490124eaeb19c28"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,System::SourceName,System::ExecutionInstanceGUID,System::PackageName,System::StartTime,User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6583ea7583c443aaa490124eaeb19c28")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6583ea7583c443aaa490124eaeb19c28")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="ST_6583ea7583c443aaa490124eaeb19c28.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{990967E9-ADEA-474B-AA58-B467BB88CDBA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6583ea7583c443aaa490124eaeb19c28</RootNamespace>
    <AssemblyName>ST_6583ea7583c443aaa490124eaeb19c28</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_6583ea7583c443aaa490124eaeb19c28
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>

        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 خواندن متغیرهای سیستمی
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString(); // Task اصلی
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();   // خود Script Task
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string status = "Success"; // چون PostExecute اجرا شده، یعنی موفق بوده

                // 🔹 ساخت نام فایل لاگ به صورت روزانه
                string logFileName = $"SSIS_Pkg_FillItemInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 ثبت خطا در فایل پشتیبان
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Error in Event Handler Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillItemInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);

                // 🔴 ثبت خطا در SSIS Event
                bool fireAgain = true;
                Dts.Events.FireError(0, "Event Handler Script Error", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }



        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6583ea7583c443aaa490124eaeb19c28</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6583ea7583c443aaa490124eaeb19c28</msb:DisplayName>
    <msb:ProjectId>{5B000B7E-697F-4293-B2A0-57531F5B1123}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6583ea7583c443aaa490124eaeb19c28.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6583ea7583c443aaa490124eaeb19c28.Properties.Settings.get_Default():ST_6583ea7583c443aaa490124eaeb19c28.Properties.Sett" +
    "ings")]

namespace ST_6583ea7583c443aaa490124eaeb19c28.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6583ea7583c443aaa490124eaeb19c28.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6583ea7583c443aaa490124eaeb19c28.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6583ea7583c443aaa490124eaeb19c28.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6583ea7583c443aaa490124eaeb19c28.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6583ea7583c443aaa490124eaeb19c28.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_6583ea7583c443aaa490124eaeb19c28.dll">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
BwADAQAAygUAAEUABAAKABEAEAS1ABEAMQG5ABEAdwC9AAYGVwDBAFaAugXEAFaAEQHEAFAgAAAA
AIYAIgQGAAEAwCIAAAAAhhjRBAYAAQDIIgAAAACDGNEEBgABANAiAAAAAJMIhwTIAAEA/CIAAAAA
kwgZAc0AAQADIwAAAACTCCUB0gABAAsjAAAAAJYI/wXYAAIAEiMAAAAAhhjRBAYAAgAaIwAAAACR
GNcE3QACAAAAAQA1AwkA0QQBABEA0QQGABkA0QQKACkA0QQQADEA0QQQADkA0QQQAEEA0QQQAEkA
0QQQAFEA0QQQAFkA0QQQAGEA0QQQAGkA0QQGAJEA0QQGALkA0QQVAMkA0QQGAHEAwgUrANEAowUw
ANkA+wM1AOEAKwM7AJkAVQM/AOkA4wVDAOkAPQZIAPkAKAZOAAEB8QVTAAkBBAFZAHkA0QRfABEB
+gAQAAEB6gVZABEB+gAGABkBdQEGANEACwYBAIEAhwA/AIEAaAA/AAEB8QVlACEBGgZtANEA2AVz
ACkBxwR5AHEA0QQGAJkA0QQGADEBugCCADEBMAaLAKEA0QSRAMEA0QQGAAgAFACrAAgAGACwACkA
cwAYAS4ACwDwAC4AEwD5AC4AGwAYAS4AIwAhAS4AKwBKAS4AMwBKAS4AOwBKAS4AQwAhAS4ASwBQ
AS4AUwBKAS4AWwBnAUMAYwCwAEkAcwAYAWEAewCwAGMAawCwABsAAwABAAQAAwAAAIsE4QAAADkB
5gAAAAMG6wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAD4kN1MAAAAAAAABAAAABAAA
AAAAAAAAAAAAmQBfAAAAAAAQAAAAAAAAAAAAAACiAGMDAAAAAAQAAAAAAAAAAAAAAJkABAQAAAAA
EAAAAAAAAAAAAAAAogA4AAAAAAAAAAAAAQAAACIFAAAFAAIAAAAAAABTVF82NTgzZWE3NTgzYzQ0
M2FhYTQ5MDEyNGVhZWIxOWMyOAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3Rh
bmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBXcml0ZUxpbmUAQ29tYmluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF82NTgz
ZWE3NTgzYzQ0M2FhYTQ5MDEyNGVhZWIxOWMyOC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3RyZWFtV3JpdGVyAFRl
eHRXcml0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzY1ODNlYTc1ODNj
NDQzYWFhNDkwMTI0ZWFlYjE5YzI4LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF82NTgzZWE3NTgzYzQ0M2FhYTQ5MDEyNGVhZWIxOWMyOC5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAQXBwZW5kQWxsVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkA
AAAAAC1VAHMAZQByADoAOgBWAFIAXwBMAG8AZwBGAG8AbABkAGUAcgBQAGEAdABoAAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQBy
AGMAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAO1MAeQBzAHQA
ZQBtADoAOgBFAHgAZQBjAHUAdABpAG8AbgBJAG4AcwB0AGEAbgBjAGUARwBVAEkARAAAD1MAdQBj
AGMAZQBzAHMAAFVTAFMASQBTAF8AUABrAGcAXwBGAGkAbABsAEkAdABlAG0ASQBuAGYAbwBfAEwA
bwBnAF8AewAwADoAeQB5AHkAeQBNAE0AZABkAH0ALgBsAG8AZwAAZS0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQABT0QAYQB0AGUAVABpAG0AZQAgACAAIAAgACAAIAA6
ACAAewAwADoAeQB5AHkAeQAtAE0ATQAtAGQAZAAgAEgASAA6AG0AbQA6AHMAcwB9AAEhUABhAGMA
awBhAGcAZQAgAE4AYQBtAGUAIAAgADoAIAAAIVMAbwB1AHIAYwBlACAAVABhAHMAawAgACAAIAA6
ACAAACFTAGMAcgBpAHAAdAAgAFQAYQBzAGsAIAAgACAAOgAgAAAhRQB4AGUAYwB1AHQAaQBvAG4A
IABJAEQAIAAgADoAIAAAIVMAdABhAHQAdQBzACAAIAAgACAAIAAgACAAIAA6ACAAAFtbAHsAMAB9
AF0AIABFAHIAcgBvAHIAIABpAG4AIABFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByACAAUwBjAHIA
aQBwAHQAOgAKAHsAMQB9AAoAewAyAH0ACgAAYUUAeABjAGUAcAB0AGkAbwBuAF8AUwBTAEkAUwBf
AFAAawBnAF8ARgBpAGwAbABJAHQAZQBtAEkAbgBmAG8AXwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQA
fQAuAGwAbwBnAAA1RQB2AGUAbgB0ACAASABhAG4AZABsAGUAcgAgAFMAYwByAGkAcAB0ACAARQBy
AHIAbwByAAABAHFTAFQAXwA2ADUAOAAzAGUAYQA3ADUAOAAzAGMANAA0ADMAYQBhAGEANAA5ADAA
MQAyADQAZQBhAGUAYgAxADkAYwAyADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1
AHIAYwBlAHMAAAAAAPNgS6YHlexKtC2XxsHf/GsABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkP
BwsODg4ODg4OEj0SQQ4OBCAAEmkEIAASbQUgARJxHAMgABwDIAAOBAABAg4FAAESeQ4EAAARfQUA
Ag4OHAUAAg4ODgUgAgEOAgcABA4OHBwcBQACAQ4OBSAAEoCVCCAFAggODg4ICAABEoCZEYCdBSAA
EoChByACAQ4SgKEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSUQMGElUDBhIQAgYIAwYR
FAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJVBAgAEhAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzY1ODNlYTc1ODNjNDQzYWFh
NDkwMTI0ZWFlYjE5YzI4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC43AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAPQ0AAAAAAAAAAAAAA41AAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAANQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQA3Uz4kAAABADdTPiQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADYANQA4ADMAZQBhADcANQA4ADMAYwA0ADQAMwBhAGEAYQA0ADkAMAAxADIANABlAGEA
ZQBiADEAOQBjADIAOAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5
ADIANwA4AC4AMgAxADMAMAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADYANQA4ADMAZQBhADcANQA4ADMAYwA0ADQAMwBhAGEAYQA0ADkAMAAxADIANABlAGEAZQBi
ADEAOQBjADIAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANgA1ADgAMwBlAGEANwA1ADgAMwBjADQANAAzAGEAYQBhADQAOQAwADEAMgA0
AGUAYQBlAGIAMQA5AGMAMgA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADYANQA4ADMAZQBhADcANQA4ADMAYwA0ADQAMwBhAGEAYQA0ADkAMAAxADIANABl
AGEAZQBiADEAOQBjADIAOAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOQAyADcAOAAuADIAMQAzADAAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAOAAuADIAMQAzADAAMwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Pkg_FilltemInfo.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run_Pkg_Pkg_FillBaseSaleInfo"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{A0E6E34F-CC45-4352-9800-D7EC95F473DA}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run_Pkg_Pkg_FillBaseSaleInfo"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_Pkg_FillBaseSaleInfo.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{1D199BA4-C10F-4CA6-A35B-A1DFED04AC07}"
          DTS:EventID="-815193728"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{C6F34A4E-DA80-4AAD-8394-1AD2E0D6B9A7}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_Pkg_FillBaseSaleInfo.EventHandlers[OnError]\Pkg_FillBaseSaleInfo_OnError"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{451939CD-D89D-4E5A-ABEC-02A10D91EEED}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillBaseSaleInfo_OnError">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_a0bc590e0a2143ba82e5f868f8928164"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::PackageName, System::SourceName, System::ExecutionInstanceGUID, System::ErrorCode, System::ErrorDescription, System::TaskName, User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_a0bc590e0a2143ba82e5f868f8928164
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 متغیرهای لاگ خطا
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString();
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string errorCode = Dts.Variables["System::ErrorCode"].Value.ToString();
                string errorDesc = Dts.Variables["System::ErrorDescription"].Value.ToString();
                string status = "FAILED";

                // 🔹 ساخت مسیر فایل لاگ
                string logFileName = $"SSIS_Pkg_FillBaseSaleInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine($"Error Code    : {errorCode}");
                    sw.WriteLine($"Error Message : {errorDesc}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 لاگ خطای ثانویه
                string fallbackPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Exception in OnError Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillBaseSaleInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(fallbackPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);
                bool fireAgain = true;
                Dts.Events.FireError(0, "OnError Event Handler Script", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_a0bc590e0a2143ba82e5f868f8928164.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2D46C235-A2F6-4811-B80B-6B6FA09F861F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a0bc590e0a2143ba82e5f868f8928164</RootNamespace>
    <AssemblyName>ST_a0bc590e0a2143ba82e5f868f8928164</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_a0bc590e0a2143ba82e5f868f8928164</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_a0bc590e0a2143ba82e5f868f8928164</msb:DisplayName>
    <msb:ProjectId>{6238D3B2-8136-4E60-83DB-A8EDA79E84C9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a0bc590e0a2143ba82e5f868f8928164.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0bc590e0a2143ba82e5f868f8928164.Properties.Settings.get_Default():ST_a0bc590e0a2143ba82e5f868f8928164.Properties.Sett" +
    "ings")]

namespace ST_a0bc590e0a2143ba82e5f868f8928164.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a0bc590e0a2143ba82e5f868f8928164")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a0bc590e0a2143ba82e5f868f8928164")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0bc590e0a2143ba82e5f868f8928164.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0bc590e0a2143ba82e5f868f8928164.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0bc590e0a2143ba82e5f868f8928164.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a0bc590e0a2143ba82e5f868f8928164.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a0bc590e0a2143ba82e5f868f8928164.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_a0bc590e0a2143ba82e5f868f8928164.dll">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
VFMAdmFsdWVfXwBtc2NvcmxpYgBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUARmlsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRl
TGluZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2EwYmM1OTBlMGEyMTQz
YmE4MmU1Zjg2OGY4OTI4MTY0LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTBiYzU5MGUwYTIxNDNiYTgyZTVm
ODY4Zjg5MjgxNjQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUX2EwYmM1OTBlMGEyMTQzYmE4MmU1Zjg2OGY4OTI4MTY0LlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4
aXN0cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABBcHBl
bmRBbGxUZXh0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAAAAALVUAcwBl
AHIAOgA6AFYAUgBfAEwAbwBnAEYAbwBsAGQAZQByAFAAYQB0AGgAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBt
AGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAA7UwB5AHMAdABlAG0AOgA6AEUA
eABlAGMAdQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBHAFUASQBEAAAjUwB5AHMAdABlAG0AOgA6
AEUAcgByAG8AcgBDAG8AZABlAAAxUwB5AHMAdABlAG0AOgA6AEUAcgByAG8AcgBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAA1GAEEASQBMAEUARAAAXVMAUwBJAFMAXwBQAGsAZwBfAEYAaQBsAGwAQgBh
AHMAZQBTAGEAbABlAEkAbgBmAG8AXwBMAG8AZwBfAHsAMAA6AHkAeQB5AHkATQBNAGQAZAB9AC4A
bABvAGcAAGUtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0AAU9EAGEA
dABlAFQAaQBtAGUAIAAgACAAIAAgACAAOgAgAHsAMAA6AHkAeQB5AHkALQBNAE0ALQBkAGQAIABI
AEgAOgBtAG0AOgBzAHMAfQABIVAAYQBjAGsAYQBnAGUAIABOAGEAbQBlACAAIAA6ACAAACFTAG8A
dQByAGMAZQAgAFQAYQBzAGsAIAAgACAAOgAgAAAhUwBjAHIAaQBwAHQAIABUAGEAcwBrACAAIAAg
ADoAIAAAIUUAeABlAGMAdQB0AGkAbwBuACAASQBEACAAIAA6ACAAACFTAHQAYQB0AHUAcwAgACAA
IAAgACAAIAAgACAAOgAgAAAhRQByAHIAbwByACAAQwBvAGQAZQAgACAAIAAgADoAIAAAIUUAcgBy
AG8AcgAgAE0AZQBzAHMAYQBnAGUAIAA6ACAAAFdbAHsAMAB9AF0AIABFAHgAYwBlAHAAdABpAG8A
bgAgAGkAbgAgAE8AbgBFAHIAcgBvAHIAIABTAGMAcgBpAHAAdAA6AAoAewAxAH0ACgB7ADIAfQAK
AABpRQB4AGMAZQBwAHQAaQBvAG4AXwBTAFMASQBTAF8AUABrAGcAXwBGAGkAbABsAEIAYQBzAGUA
UwBhAGwAZQBJAG4AZgBvAF8AewAwADoAeQB5AHkAeQBNAE0AZABkAH0ALgBsAG8AZwAAOU8AbgBF
AHIAcgBvAHIAIABFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByACAAUwBjAHIAaQBwAHQAAAEAcVMA
VABfAGEAMABiAGMANQA5ADAAZQAwAGEAMgAxADQAMwBiAGEAOAAyAGUANQBmADgANgA4AGYAOAA5
ADIAOAAxADYANAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA
FRci2/VT2Ee8EXVPdAPKEgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWREHDQ4ODg4ODg4ODhI9
EkEODgQgABJpBCAAEm0FIAEScRwDIAAcAyAADgQAAQIOBQABEnkOBAAAEX0FAAIODhwFAAIODg4F
IAIBDgIHAAQODhwcHAUAAgEODgUgABKAlQggBQIIDg4OCAgAARKAmRGAnQUgABKAoQcgAgEOEoCh
CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQEAAASUQQAABJV
BQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hMGJjNTkwZTBhMjE0M2JhODJlNWY4NjhmODky
ODE2NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAABDYAAAAAAAAAAAAAHjYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA2AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAERRcCQAAAEARFFwJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AYQAwAGIAYwA1ADkAMABlADAAYQAyADEANAAzAGIAYQA4ADIAZQA1AGYAOAA2ADgAZgA4
ADkAMgA4ADEANgA0AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MwAyADgALgAyADAAOAAwADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AYQAwAGIAYwA1ADkAMABlADAAYQAyADEANAAzAGIAYQA4ADIAZQA1AGYAOAA2ADgAZgA4ADkA
MgA4ADEANgA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwBhADAAYgBjADUAOQAwAGUAMABhADIAMQA0ADMAYgBhADgAMgBlADUAZgA4ADYA
OABmADgAOQAyADgAMQA2ADQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AYQAwAGIAYwA1ADkAMABlADAAYQAyADEANAAzAGIAYQA4ADIAZQA1AGYAOAA2ADgA
ZgA4ADkAMgA4ADEANgA0AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADMAMgA4AC4AMgAwADgAMAA0AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADMAMgA4AC4AMgAwADgAMAA0AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_Pkg_FillBaseSaleInfo.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{CBC089EE-B680-4984-934B-9543A67A4985}"
          DTS:EventID="836360665"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{92B1E9C4-5BFF-46E2-ACB5-8D5307B80F27}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_Pkg_FillBaseSaleInfo.EventHandlers[OnPostExecute]\Pkg_FillBaseSaletInfo_PostExecute"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{271C44A3-8D50-47CD-AFB1-0C890E69BDB2}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_FillBaseSaletInfo_PostExecute">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_de0ce629078e4d83aab11423adf8f23a"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,System::SourceName,System::ExecutionInstanceGUID,System::PackageName,System::StartTime,User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_de0ce629078e4d83aab11423adf8f23a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_de0ce629078e4d83aab11423adf8f23a")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de0ce629078e4d83aab11423adf8f23a.Properties.Settings.get_Default():ST_de0ce629078e4d83aab11423adf8f23a.Properties.Sett" +
    "ings")]

namespace ST_de0ce629078e4d83aab11423adf8f23a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_de0ce629078e4d83aab11423adf8f23a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 خواندن متغیرهای سیستمی
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString(); // Task اصلی
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();   // خود Script Task
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string status = "Success"; // چون PostExecute اجرا شده، یعنی موفق بوده

                // 🔹 ساخت نام فایل لاگ به صورت روزانه
                string logFileName = $"SSIS_Pkg_FillBaseSaleInfo_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 ثبت خطا در فایل پشتیبان
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Error in Event Handler Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_FillBaseSaleInfo_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);

                // 🔴 ثبت خطا در SSIS Event
                bool fireAgain = true;
                Dts.Events.FireError(0, "Event Handler Script Error", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_de0ce629078e4d83aab11423adf8f23a</msb:CodeName>
    <msb:DisplayName>ST_de0ce629078e4d83aab11423adf8f23a</msb:DisplayName>
    <msb:ProjectId>{AB4EEF24-9BF7-42DE-A9C2-04E6EFC1EFBA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_de0ce629078e4d83aab11423adf8f23a.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_de0ce629078e4d83aab11423adf8f23a.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{388B176D-2953-4934-8EFB-02B20AF85B6B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_de0ce629078e4d83aab11423adf8f23a</RootNamespace>
    <AssemblyName>ST_de0ce629078e4d83aab11423adf8f23a</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de0ce629078e4d83aab11423adf8f23a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de0ce629078e4d83aab11423adf8f23a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de0ce629078e4d83aab11423adf8f23a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_de0ce629078e4d83aab11423adf8f23a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_de0ce629078e4d83aab11423adf8f23a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_de0ce629078e4d83aab11423adf8f23a.dll">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
BwADAQAAygUAAEUABAAKABEAEAS1ABEAMQG5ABEAdwC9AAYGMwDBAFaAugXEAFaAEQHEAFAgAAAA
AIYAIgQGAAEAwCIAAAAAhhjRBAYAAQDIIgAAAACDGNEEBgABANAiAAAAAJMIhwTIAAEA/CIAAAAA
kwgZAc0AAQADIwAAAACTCCUB0gABAAsjAAAAAJYI/wXYAAIAEiMAAAAAhhjRBAYAAgAaIwAAAACR
GNcE3QACAAAAAQA1AwkA0QQBABEA0QQGABkA0QQKACkA0QQQADEA0QQQADkA0QQQAEEA0QQQAEkA
0QQQAFEA0QQQAFkA0QQQAGEA0QQQAGkA0QQGAJEA0QQGALkA0QQVAMkA0QQGAHEAwgUrANEAowUw
ANkA+wM1AOEAKwM7AJkAVQM/AOkA4wVDAOkAPQZIAPkAKAZOAAEB8QVTAAkBBAFZAHkA0QRfABEB
+gAQAAEB6gVZABEB+gAGABkBdQEGANEACwYBAIEAhwA/AIEAaAA/AAEB8QVlACEBGgZtANEA2AVz
ACkBxwR5AHEA0QQGAJkA0QQGADEBugCCADEBMAaLAKEA0QSRAMEA0QQGAAgAFACrAAgAGACwACkA
cwAYAS4ACwDwAC4AEwD5AC4AGwAYAS4AIwAhAS4AKwBKAS4AMwBKAS4AOwBKAS4AQwAhAS4ASwBQ
AS4AUwBKAS4AWwBnAUMAYwCwAEkAcwAYAWEAewCwAGMAawCwABsAAwABAAQAAwAAAIsE4QAAADkB
5gAAAAMG6wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAHAk6k4AAAAAAAA7AAAABAAA
AAAAAAAAAAAAmQBfAAAAAAAQAAAAAAAAAAAAAACiAGMDAAAAAAQAAAAAAAAAAAAAAJkABAQAAAAA
EAAAAAAAAAAAAAAAogAUAAAAAAAAAAAAAQAAACIFAAAFAAIAAAAAAAA8TW9kdWxlPgBTeXN0ZW0u
SU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfZGUwY2U2MjkwNzhl
NGQ4M2FhYjExNDIzYWRmOGYyM2EAbXNjb3JsaWIAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3Rh
bmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBXcml0ZUxpbmUAQ29tYmluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9kZTBj
ZTYyOTA3OGU0ZDgzYWFiMTE0MjNhZGY4ZjIzYS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3RyZWFtV3JpdGVyAFRl
eHRXcml0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2RlMGNlNjI5MDc4
ZTRkODNhYWIxMTQyM2FkZjhmMjNhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9kZTBjZTYyOTA3OGU0ZDgzYWFiMTE0MjNhZGY4ZjIzYS5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAQXBwZW5kQWxsVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkA
AAAAAC1VAHMAZQByADoAOgBWAFIAXwBMAG8AZwBGAG8AbABkAGUAcgBQAGEAdABoAAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQBy
AGMAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAO1MAeQBzAHQA
ZQBtADoAOgBFAHgAZQBjAHUAdABpAG8AbgBJAG4AcwB0AGEAbgBjAGUARwBVAEkARAAAD1MAdQBj
AGMAZQBzAHMAAF1TAFMASQBTAF8AUABrAGcAXwBGAGkAbABsAEIAYQBzAGUAUwBhAGwAZQBJAG4A
ZgBvAF8ATABvAGcAXwB7ADAAOgB5AHkAeQB5AE0ATQBkAGQAfQAuAGwAbwBnAABlLQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAAFPRABhAHQAZQBUAGkAbQBlACAAIAAg
ACAAIAAgADoAIAB7ADAAOgB5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBtADoAcwBzAH0A
ASFQAGEAYwBrAGEAZwBlACAATgBhAG0AZQAgACAAOgAgAAAhUwBvAHUAcgBjAGUAIABUAGEAcwBr
ACAAIAAgADoAIAAAIVMAYwByAGkAcAB0ACAAVABhAHMAawAgACAAIAA6ACAAACFFAHgAZQBjAHUA
dABpAG8AbgAgAEkARAAgACAAOgAgAAAhUwB0AGEAdAB1AHMAIAAgACAAIAAgACAAIAAgADoAIAAA
W1sAewAwAH0AXQAgAEUAcgByAG8AcgAgAGkAbgAgAEUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIA
IABTAGMAcgBpAHAAdAA6AAoAewAxAH0ACgB7ADIAfQAKAABpRQB4AGMAZQBwAHQAaQBvAG4AXwBT
AFMASQBTAF8AUABrAGcAXwBGAGkAbABsAEIAYQBzAGUAUwBhAGwAZQBJAG4AZgBvAF8AewAwADoA
eQB5AHkAeQBNAE0AZABkAH0ALgBsAG8AZwAANUUAdgBlAG4AdAAgAEgAYQBuAGQAbABlAHIAIABT
AGMAcgBpAHAAdAAgAEUAcgByAG8AcgAAAQBxUwBUAF8AZABlADAAYwBlADYAMgA5ADAANwA4AGUA
NABkADgAMwBhAGEAYgAxADEANAAyADMAYQBkAGYAOABmADIAMwBhAC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAATafF0gwCKQ7ll94UKLXJ4AAQgAQEIAyAAAQUg
AQEREQQgAQEOBSABARFZDwcLDg4ODg4ODhI9EkEODgQgABJpBCAAEm0FIAEScRwDIAAcAyAADgQA
AQIOBQABEnkOBAAAEX0FAAIODhwFAAIODg4FIAIBDgIHAAQODhwcHAUAAgEODgUgABKAlQggBQII
Dg4OCAgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
ElEDBhJVAwYSEAIGCAMGERQEAAASUQQAABJVBQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9k
ZTBjZTYyOTA3OGU0ZDgzYWFiMTE0MjNhZGY4ZjIzYQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDI1AABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUULk5FVCBGcmFtZXdvcmsgNC43LjIAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNv
dXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9
bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2Vz
LlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAACDUAAAAAAAAAAAAAIjUA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ1AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDqTnAkAAABAOpOcCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGQAZQAwAGMAZQA2ADIAOQAwADcAOABlADQAZAA4ADMAYQBhAGIAMQAxADQAMgAzAGEA
ZABmADgAZgAyADMAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5
ADMAMgA4AC4AMgAwADIAMAAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGQAZQAwAGMAZQA2ADIAOQAwADcAOABlADQAZAA4ADMAYQBhAGIAMQAxADQAMgAzAGEAZABm
ADgAZgAyADMAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZABlADAAYwBlADYAMgA5ADAANwA4AGUANABkADgAMwBhAGEAYgAxADEANAAy
ADMAYQBkAGYAOABmADIAMwBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGQAZQAwAGMAZQA2ADIAOQAwADcAOABlADQAZAA4ADMAYQBhAGIAMQAxADQAMgAz
AGEAZABmADgAZgAyADMAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOQAzADIAOAAuADIAMAAyADAAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAzADIAOAAuADIAMAAyADAAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA0NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Pkg_FillBaseSaleInfo.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run_Pkg_RainProcess"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:Disabled="True"
      DTS:DTSID="{48BBDFF5-D7F2-4A6B-BAC5-3FC22CD34106}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run_Pkg_RainProcess"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,13,OnPostExecute</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_RainProcess.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{70FC4D2D-5FC0-4CA9-844B-6BB3C75B9B2F}"
          DTS:EventID="-1"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{31A05345-AA16-4FF8-B74B-4EF1368E2D1E}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_RainProcess.EventHandlers[OnError]\Pkg_RainProcess_OnError"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{9D71C915-A442-4E21-AF20-F1299F6B0FFA}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_RainProcess_OnError">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_01717d5ee7384d6d944da127f82c075c"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::PackageName, System::SourceName, System::ExecutionInstanceGUID, System::ErrorCode, System::ErrorDescription, System::TaskName, User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_01717d5ee7384d6d944da127f82c075c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_01717d5ee7384d6d944da127f82c075c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="ST_01717d5ee7384d6d944da127f82c075c.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3a65213e-d877-4a9e-a68c-ec78e4dcfcd7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_01717d5ee7384d6d944da127f82c075c</RootNamespace>
    <AssemblyName>ST_01717d5ee7384d6d944da127f82c075c</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_01717d5ee7384d6d944da127f82c075c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 متغیرهای لاگ خطا
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString();
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string errorCode = Dts.Variables["System::ErrorCode"].Value.ToString();
                string errorDesc = Dts.Variables["System::ErrorDescription"].Value.ToString();
                string status = "FAILED";

                // 🔹 ساخت مسیر فایل لاگ
                string logFileName = $"SSIS_Pkg_RainProcess_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine($"Error Code    : {errorCode}");
                    sw.WriteLine($"Error Message : {errorDesc}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 لاگ خطای ثانویه
                string fallbackPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Exception in OnError Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_Pkg_RainProcess_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(fallbackPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);
                bool fireAgain = true;
                Dts.Events.FireError(0, "OnError Event Handler Script", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_01717d5ee7384d6d944da127f82c075c</msb:CodeName>
    <msb:DisplayName>ST_01717d5ee7384d6d944da127f82c075c</msb:DisplayName>
    <msb:ProjectId>{5B1C3E3E-C5A2-4C77-A166-CFAF5532A9B5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_01717d5ee7384d6d944da127f82c075c.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_01717d5ee7384d6d944da127f82c075c.Properties.Settings.get_Default():ST_01717d5ee7384d6d944da127f82c075c.Properties.Sett" +
    "ings")]

namespace ST_01717d5ee7384d6d944da127f82c075c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_01717d5ee7384d6d944da127f82c075c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_01717d5ee7384d6d944da127f82c075c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_01717d5ee7384d6d944da127f82c075c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_01717d5ee7384d6d944da127f82c075c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_01717d5ee7384d6d944da127f82c075c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_01717d5ee7384d6d944da127f82c075c.dll">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
ZDZkOTQ0ZGExMjdmODJjMDc1YwBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21I
YW5kbGUARmlsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFdyaXRl
TGluZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzAxNzE3ZDVlZTczODRk
NmQ5NDRkYTEyN2Y4MmMwNzVjLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMDE3MTdkNWVlNzM4NGQ2ZDk0NGRh
MTI3ZjgyYzA3NWMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUXzAxNzE3ZDVlZTczODRkNmQ5NDRkYTEyN2Y4MmMwNzVjLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4
aXN0cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABBcHBl
bmRBbGxUZXh0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAAAAALVUAcwBl
AHIAOgA6AFYAUgBfAEwAbwBnAEYAbwBsAGQAZQByAFAAYQB0AGgAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBt
AGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAA7UwB5AHMAdABlAG0AOgA6AEUA
eABlAGMAdQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBHAFUASQBEAAAjUwB5AHMAdABlAG0AOgA6
AEUAcgByAG8AcgBDAG8AZABlAAAxUwB5AHMAdABlAG0AOgA6AEUAcgByAG8AcgBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAA1GAEEASQBMAEUARAAAU1MAUwBJAFMAXwBQAGsAZwBfAFIAYQBpAG4AUABy
AG8AYwBlAHMAcwBfAEwAbwBnAF8AewAwADoAeQB5AHkAeQBNAE0AZABkAH0ALgBsAG8AZwAAZS0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQABT0QAYQB0AGUAVABpAG0A
ZQAgACAAIAAgACAAIAA6ACAAewAwADoAeQB5AHkAeQAtAE0ATQAtAGQAZAAgAEgASAA6AG0AbQA6
AHMAcwB9AAEhUABhAGMAawBhAGcAZQAgAE4AYQBtAGUAIAAgADoAIAAAIVMAbwB1AHIAYwBlACAA
VABhAHMAawAgACAAIAA6ACAAACFTAGMAcgBpAHAAdAAgAFQAYQBzAGsAIAAgACAAOgAgAAAhRQB4
AGUAYwB1AHQAaQBvAG4AIABJAEQAIAAgADoAIAAAIVMAdABhAHQAdQBzACAAIAAgACAAIAAgACAA
IAA6ACAAACFFAHIAcgBvAHIAIABDAG8AZABlACAAIAAgACAAOgAgAAAhRQByAHIAbwByACAATQBl
AHMAcwBhAGcAZQAgADoAIAAAV1sAewAwAH0AXQAgAEUAeABjAGUAcAB0AGkAbwBuACAAaQBuACAA
TwBuAEUAcgByAG8AcgAgAFMAYwByAGkAcAB0ADoACgB7ADEAfQAKAHsAMgB9AAoAAFVFAHgAYwBl
AHAAdABpAG8AbgBfAFAAawBnAF8AUgBhAGkAbgBQAHIAbwBjAGUAcwBzAF8AewAwADoAeQB5AHkA
eQBNAE0AZABkAH0ALgBsAG8AZwAAOU8AbgBFAHIAcgBvAHIAIABFAHYAZQBuAHQAIABIAGEAbgBk
AGwAZQByACAAUwBjAHIAaQBwAHQAAAEAcVMAVABfADAAMQA3ADEANwBkADUAZQBlADcAMwA4ADQA
ZAA2AGQAOQA0ADQAZABhADEAMgA3AGYAOAAyAGMAMAA3ADUAYwAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAEOUIA4IeG1No3ND27aR80UABCABAQgDIAABBSABARER
BCABAQ4FIAEBEVkRBw0ODg4ODg4ODg4SPRJBDg4EIAASaQQgABJtBSABEnEcAyAAHAMgAA4EAAEC
DgUAARJ5DgQAABF9BQACDg4cBQACDg4OBSACAQ4CBwAEDg4cHBwFAAIBDg4FIAASgJUIIAUCCA4O
DggIAAESgJkRgJ0FIAASgKEHIAIBDhKAoQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJR
AwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJRBAgAElUECAASEAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMDE3
MTdkNWVlNzM4NGQ2ZDk0NGRhMTI3ZjgyYzA3NWMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAy
NQAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4yALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADoNQAAAAAAAAAAAAACNgAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA9DUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAExUPiQAAAEATFQ+JD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMAAxADcAMQA3AGQANQBlAGUANwAzADgANABkADYAZAA5ADQANABkAGEAMQAyADcAZgA4
ADIAYwAwADcANQBjAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA3ADgALgAyADEANQA4ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AMAAxADcAMQA3AGQANQBlAGUANwAzADgANABkADYAZAA5ADQANABkAGEAMQAyADcAZgA4ADIA
YwAwADcANQBjAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAwADEANwAxADcAZAA1AGUAZQA3ADMAOAA0AGQANgBkADkANAA0AGQAYQAxADIA
NwBmADgAMgBjADAANwA1AGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMAAxADcAMQA3AGQANQBlAGUANwAzADgANABkADYAZAA5ADQANABkAGEAMQAyADcA
ZgA4ADIAYwAwADcANQBjAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIANwA4AC4AMgAxADUAOAAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIANwA4AC4AMgAxADUAOAAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABQ2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Run_Pkg_RainProcess.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{32FAC4A1-FB11-4C74-B012-F8556B8A723D}"
          DTS:EventID="6357100"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{A6A13A1D-B0F9-40B9-9C00-D31540AEFAE4}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Run_Pkg_RainProcess.EventHandlers[OnPostExecute]\Pkg_RainProcess_OnPostExecute"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{A663D700-253D-4BCA-857E-673D2C23335D}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_RainProcess_OnPostExecute">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_ad9902f704a94411be4cf246b97a5650"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,System::SourceName,System::ExecutionInstanceGUID,System::PackageName,System::StartTime,User::VR_LogFolderPath">
                  <ProjectItem
                    Name="ST_ad9902f704a94411be4cf246b97a5650.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{160e82e2-5ae1-469a-a304-bb5b5599cbc8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ad9902f704a94411be4cf246b97a5650</RootNamespace>
    <AssemblyName>ST_ad9902f704a94411be4cf246b97a5650</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ad9902f704a94411be4cf246b97a5650.Properties.Settings.get_Default():ST_ad9902f704a94411be4cf246b97a5650.Properties.Sett" +
    "ings")]

namespace ST_ad9902f704a94411be4cf246b97a5650.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_ad9902f704a94411be4cf246b97a5650
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 خواندن متغیرهای سیستمی
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString(); // Task اصلی
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();   // خود Script Task
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string status = "Success"; // چون PostExecute اجرا شده، یعنی موفق بوده

                // 🔹 ساخت نام فایل لاگ به صورت روزانه
                string logFileName = $"SSIS_Pkg_RainProcess_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 ثبت خطا در فایل پشتیبان
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Error in Event Handler Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Pkg_RainProcess_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);

                // 🔴 ثبت خطا در SSIS Event
                bool fireAgain = true;
                Dts.Events.FireError(0, "Event Handler Script Error", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_ad9902f704a94411be4cf246b97a5650</msb:CodeName>
    <msb:DisplayName>ST_ad9902f704a94411be4cf246b97a5650</msb:DisplayName>
    <msb:ProjectId>{7505BA7F-FAD9-4F37-AAA9-0EC460BC2033}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ad9902f704a94411be4cf246b97a5650.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ad9902f704a94411be4cf246b97a5650")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ad9902f704a94411be4cf246b97a5650")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ad9902f704a94411be4cf246b97a5650.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ad9902f704a94411be4cf246b97a5650.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ad9902f704a94411be4cf246b97a5650.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ad9902f704a94411be4cf246b97a5650.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ad9902f704a94411be4cf246b97a5650.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_ad9902f704a94411be4cf246b97a5650.dll">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
BwADAQAAygUAAEUABAAKABEAEAS1ABEAMQG5ABEAdwC9AAYGVwDBAFaAugXEAFaAEQHEAFAgAAAA
AIYAIgQGAAEAwCIAAAAAhhjRBAYAAQDIIgAAAACDGNEEBgABANAiAAAAAJMIhwTIAAEA/CIAAAAA
kwgZAc0AAQADIwAAAACTCCUB0gABAAsjAAAAAJYI/wXYAAIAEiMAAAAAhhjRBAYAAgAaIwAAAACR
GNcE3QACAAAAAQA1AwkA0QQBABEA0QQGABkA0QQKACkA0QQQADEA0QQQADkA0QQQAEEA0QQQAEkA
0QQQAFEA0QQQAFkA0QQQAGEA0QQQAGkA0QQGAJEA0QQGALkA0QQVAMkA0QQGAHEAwgUrANEAowUw
ANkA+wM1AOEAKwM7AJkAVQM/AOkA4wVDAOkAPQZIAPkAKAZOAAEB8QVTAAkBBAFZAHkA0QRfABEB
+gAQAAEB6gVZABEB+gAGABkBdQEGANEACwYBAIEAhwA/AIEAaAA/AAEB8QVlACEBGgZtANEA2AVz
ACkBxwR5AHEA0QQGAJkA0QQGADEBugCCADEBMAaLAKEA0QSRAMEA0QQGAAgAFACrAAgAGACwACkA
cwAYAS4ACwDwAC4AEwD5AC4AGwAYAS4AIwAhAS4AKwBKAS4AMwBKAS4AOwBKAS4AQwAhAS4ASwBQ
AS4AUwBKAS4AWwBnAUMAYwCwAEkAcwAYAWEAewCwAGMAawCwABsAAwABAAQAAwAAAIsE4QAAADkB
5gAAAAMG6wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAADgkx1MAAAAAAAABAAAABAAA
AAAAAAAAAAAAmQBfAAAAAAAQAAAAAAAAAAAAAACiAGMDAAAAAAQAAAAAAAAAAAAAAJkABAQAAAAA
EAAAAAAAAAAAAAAAogA4AAAAAAAAAAAAAQAAACIFAAAFAAIAAAAAAABTVF9hZDk5MDJmNzA0YTk0
NDExYmU0Y2YyNDZiOTdhNTY1MAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3Rh
bmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBXcml0ZUxpbmUAQ29tYmluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9hZDk5
MDJmNzA0YTk0NDExYmU0Y2YyNDZiOTdhNTY1MC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3RyZWFtV3JpdGVyAFRl
eHRXcml0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2FkOTkwMmY3MDRh
OTQ0MTFiZTRjZjI0NmI5N2E1NjUwLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9hZDk5MDJmNzA0YTk0NDExYmU0Y2YyNDZiOTdhNTY1MC5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAQXBwZW5kQWxsVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkA
AAAAAC1VAHMAZQByADoAOgBWAFIAXwBMAG8AZwBGAG8AbABkAGUAcgBQAGEAdABoAAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQBy
AGMAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAO1MAeQBzAHQA
ZQBtADoAOgBFAHgAZQBjAHUAdABpAG8AbgBJAG4AcwB0AGEAbgBjAGUARwBVAEkARAAAD1MAdQBj
AGMAZQBzAHMAAFNTAFMASQBTAF8AUABrAGcAXwBSAGEAaQBuAFAAcgBvAGMAZQBzAHMAXwBMAG8A
ZwBfAHsAMAA6AHkAeQB5AHkATQBNAGQAZAB9AC4AbABvAGcAAGUtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0AAU9EAGEAdABlAFQAaQBtAGUAIAAgACAAIAAgACAAOgAg
AHsAMAA6AHkAeQB5AHkALQBNAE0ALQBkAGQAIABIAEgAOgBtAG0AOgBzAHMAfQABIVAAYQBjAGsA
YQBnAGUAIABOAGEAbQBlACAAIAA6ACAAACFTAG8AdQByAGMAZQAgAFQAYQBzAGsAIAAgACAAOgAg
AAAhUwBjAHIAaQBwAHQAIABUAGEAcwBrACAAIAAgADoAIAAAIUUAeABlAGMAdQB0AGkAbwBuACAA
SQBEACAAIAA6ACAAACFTAHQAYQB0AHUAcwAgACAAIAAgACAAIAAgACAAOgAgAABbWwB7ADAAfQBd
ACAARQByAHIAbwByACAAaQBuACAARQB2AGUAbgB0ACAASABhAG4AZABsAGUAcgAgAFMAYwByAGkA
cAB0ADoACgB7ADEAfQAKAHsAMgB9AAoAAF9FAHgAYwBlAHAAdABpAG8AbgBfAFMAUwBJAFMAXwBQ
AGsAZwBfAFIAYQBpAG4AUAByAG8AYwBlAHMAcwBfAHsAMAA6AHkAeQB5AHkATQBNAGQAZAB9AC4A
bABvAGcAADVFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQByACAAUwBjAHIAaQBwAHQAIABFAHIAcgBv
AHIAAAEAcVMAVABfAGEAZAA5ADkAMAAyAGYANwAwADQAYQA5ADQANAAxADEAYgBlADQAYwBmADIA
NAA2AGIAOQA3AGEANQA2ADUAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAAAAA8RW4vF8aRk6WZUgp7feKDQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQ8HCw4O
Dg4ODg4SPRJBDg4EIAASaQQgABJtBSABEnEcAyAAHAMgAA4EAAECDgUAARJ5DgQAABF9BQACDg4c
BQACDg4OBSACAQ4CBwAEDg4cHBwFAAIBDg4FIAASgJUIIAUCCA4ODggIAAESgJkRgJ0FIAASgKEH
IAIBDhKAoQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUBAAA
ElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJRBAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYWQ5OTAyZjcwNGE5NDQxMWJlNGNm
MjQ2Yjk3YTU2NTAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAATQEAHC5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3Jr
IDQuNy4yAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAPQ0AAAAAAAAAAAAAA41AAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAANQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDHUzgkAAABAMdTOCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEAZAA5ADkAMAAyAGYANwAwADQAYQA5ADQANAAxADEAYgBlADQAYwBmADIANAA2AGIA
OQA3AGEANQA2ADUAMAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5
ADIANwAyAC4AMgAxADQANAA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGEAZAA5ADkAMAAyAGYANwAwADQAYQA5ADQANAAxADEAYgBlADQAYwBmADIANAA2AGIAOQA3
AGEANQA2ADUAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYQBkADkAOQAwADIAZgA3ADAANABhADkANAA0ADEAMQBiAGUANABjAGYAMgA0
ADYAYgA5ADcAYQA1ADYANQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEAZAA5ADkAMAAyAGYANwAwADQAYQA5ADQANAAxADEAYgBlADQAYwBmADIANAA2
AGIAOQA3AGEANQA2ADUAMAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOQAyADcAMgAuADIAMQA0ADQANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADIAMQA0ADQANwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAgNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>Pkg_RainProcess.dtsx</PackageName>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Seq_FillBaseDimension"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{7D8C7E6A-596C-4B09-8948-5C07E02E7BBF}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Seq_FillBaseDimension">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,13,OnPostExecute</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPostExecute"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimCalender"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{37B64E3F-9D43-46B1-B6D2-612646120E25}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimCalender"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="  DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;,  @CompanyID INT &#xA;&#xA;&#x9;&#x9;SET @DateNow =  GETDATE()&#x9;&#xA;&#x9;&#x9;SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXEC (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WITH FilterDate AS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  MinDate =  MIN (MinDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, MaxDate =  Max (MaxDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;MIN(DocumentDate) AS MinDate, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;MAX(DocumentDate) AS MaxDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM FactStockDocument&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;UNION &#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;MIN(BusinessDay) AS MinDate, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;MAX(InvoiceDate) AS MaxDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM FactSaleReturn&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;) AS D&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO dbo.DimBusinessDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;( BusinessDay , BusinessDayDate , [DayOfWeek] , &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;JalaliDate , JalaliDayName , JalaliDayOfMonth , JalaliMonth , JalaliMonthName , JalaliQuarter ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;JalaliQuarterName , JalaliSemester , JalaliSemesterName ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;JalaliYear , JalaliDayOfWeek&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT DISTINCT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  CAST(REPLACE(CAST(CAST(BusinessDate AS DATE) AS NVARCHAR), ''-'', '''') AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, BusinessDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, DATEPART(WEEKDAY, BusinessDate)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, [Date]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, [DayOfWeek]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,  CAST(SUBSTRING([Date], 9 ,2) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, MonthID - 464, [Month]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, SeasonID - 460&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, Season&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN CAST(SUBSTRING([Date], 6 ,2) AS INT) &lt;= 6 THEN 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN CAST(SUBSTRING([Date], 6 ,2) AS INT) &gt; 6 THEN 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  END&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN CAST(SUBSTRING([Date], 6 ,2) AS INT) &lt;= 6 THEN N''نیم سال اول''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN CAST(SUBSTRING([Date], 6 ,2) AS INT) &gt;= 7 THEN N''نیم سال دوم'' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  END&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;,   CAST(SUBSTRING([Date], 0 ,5) AS INT)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, DATEPART(WEEKDAY, BusinessDate)&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM '+ @LinkServerPath +'[dbo].CalendarView C&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CROSS JOIN FilterDate FD -- Include the FilterDate CTE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE LanguageID = 314&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LEN (C.DATE ) = 10 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND  CAST(REPLACE(CAST(CAST(BusinessDate AS DATE) AS NVARCHAR), ''-'', '''') AS INT) BETWEEN FD.MinDate AND FD.MaxDate  -- Filter BusinessDate between MinDate and MaxDate&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND NOT EXISTS (SELECT * FROM dbo.DimBusinessDate WHERE BusinessDay = CAST(REPLACE(CAST(CAST(BusinessDate AS DATE) AS NVARCHAR), ''-'', '''') AS INT))&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9; &#xA;&#xA;&#x9;&#x9;&#x9;&#x9; --SET   ?&#x9; = ('Ashkan' )&#xA;&#x9;&#x9;&#x9;&#x9; SET   ?&#x9; = (  CONCAT (  @LinkServerPath&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , 'Insert Success ' &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  '08_DimCalendar '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_Calender_08"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimCompany"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2C827292-3899-499E-8FD3-17D14DD85DC8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimCompany"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;,  @CompanyID INT &#xA;&#xA;&#xA;&#x9;   SET @DateNow =  GETDATE()&#x9;&#xA;&#x9;&#x9;SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#xA;&#xA;&#x9;&#x9; IF NOT EXISTS &#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9; SELECT *  FROM DimCompany&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9; BEGIN &#xA;&#xA;&#xA;&#x9;&#x9;&#x9;EXEC ('&#xA;&#x9;&#x9;&#x9; &#x9;INSERT INTO  DimCompany&#xA;&#x9;&#x9;&#x9;&#x9;VALUES ( &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  '+@CompanyID +'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, N''دفترمرکزی''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, NULL &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;, GetDate()&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;' )&#xA;&#xA;&#x9;&#x9;&#x9; END &#xA;&#xA;&#xA;&#x9;SET   ?&#x9; = (  CONCAT (  @LinkServerPath&#xA;&#x9;&#x9;&#x9;&#x9;,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;, 'Insert Success ' &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;, '01_DimCompany '&#xA;&#x9;&#x9;&#x9;&#x9;, @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;)&#xA;&#xA;&#xA;&#x9;--SELECT 1/0&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_DimCompany_01"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimDictionary"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Use For Insert DimDictionary"
          DTS:DTSID="{46035FB2-77BD-4CCD-A5C5-745FFF8F8E43}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimDictionary"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="&#xA;&#xA;&#xA;&#xA;DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;,  @CompanyID INT &#xA;&#x9;&#x9;, @SQL NVARCHAR(MAX);&#xA;&#xA;&#x9;&#x9;SET @DateNow =  GETDATE()&#x9;&#xA;&#x9;&#x9;SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--DELETE   dbo.DimDictionary&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; SET @SQL = N' &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;INSERT INTO dbo.DimDictionary&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;( ID, Name, Type , EtlTime  )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT DictionaryID, Name, DictionaryType,@DateNowParam FROM ' + @LinkServerPath + '[dbo].[DictionaryView] X&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE NOT EXISTS (SELECT * FROM dbo.DimDictionary WHERE ID = X.DictionaryID)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LanguageID = 314&#xA; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;print @SQL&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Execute sp_executesql with parameter definitions&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXEC sp_executesql &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@SQL,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N'@CompanyIdParam INT, @DateNowParam DATETIME',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CompanyIdParam = @CompanyID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam = @DateNow;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9; --SET   ?&#x9; = ('Ashkan' )&#xA;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9; SET   ?&#x9; = (  CONCAT (  @LinkServerPath&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , 'Insert Success ' &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , '04_DimDictionary '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_DimDictionary_04"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimEmployee"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Use For Insert DimEmployee"
          DTS:DTSID="{0D873CA9-1B26-4CC4-A0D9-26772254D80F}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimEmployee"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="4">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="&#xA;&#xA;&#xA;-- Declare variables&#xA;&#xA;&#x9;&#x9;&#x9;DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,  @CompanyID INT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, @SQL NVARCHAR(MAX);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SET @DateNow =  GETDATE()&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--SET @LinkServerPath = '[10.15.20.231\RWP_2022].[RWP_Sale_DB_Bakhshi].'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--SET @CompanyID = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#xA;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;-- Build dynamic SQL string&#xA;&#xA;&#x9;&#x9;&#x9;SET @SQL = N' INSERT INTO dbo.DimEmployee&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;( EmployeeID, Name , EtlTime )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; SELECT EmployeeID, EmployeeName ,Max( @DateNowParam)  FROM ' + @LinkServerPath + '[dbo].[EmployeeView] X&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE NOT EXISTS (SELECT * FROM dbo.DimEmployee WHERE EmployeeID = X.EmployeeID)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND LanguageID = 314&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY EmployeeID, EmployeeName &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;';&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;print @SQL&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Execute sp_executesql with parameter definitions&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXEC sp_executesql &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@SQL,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N'@CompanyIdParam INT, @DateNowParam DATETIME',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CompanyIdParam = @CompanyID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam = @DateNow;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9; SET   ?&#x9; = (  CONCAT (  @LinkServerPath&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , 'Insert Success ' &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , '03_DimEmployee '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_DimEmployee_03"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimEtlTime"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5732E34C-9A88-45DC-BE90-2C26A0B0CA9A}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimEtlTime"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="&#x9;DECLARE &#x9;@CurrentEtlTime DATETIME &#xA;&#x9;&#x9;&#xA;&#x9;SET @CurrentEtlTime = GETDATE()&#x9;&#xA;&#xA;&#x9;INSERT INTO DimEtlTime (EtlTime, EtlYear, EtlMonth, EtlDay, EtlHour, EtlMinute , ObjectName ,PersianEtlTime )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;VALUES (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CurrentEtlTime,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;YEAR(@CurrentEtlTime),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;MONTH(@CurrentEtlTime),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DAY(@CurrentEtlTime),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DATEPART(HOUR, @CurrentEtlTime),&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DATEPART(MINUTE, @CurrentEtlTime) , &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'Pkg_FillBaseInfo' ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CONCAT (FORMAT(@CurrentEtlTime, 'yyyy/MM/dd', 'fa')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   , ' '  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   , CAST ( @CurrentEtlTime AS TIME  )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimRepository"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B7D1CC72-1CF8-43CB-BFA6-094377927C0B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimRepository"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="&#xA;DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;,  @CompanyID INT &#xA;&#x9;&#x9;, @SQL NVARCHAR(MAX);&#xA;&#xA;&#x9;&#x9;SET @DateNow =  GETDATE()&#x9;&#xA;&#x9;&#x9;SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; SET @SQL =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO DimRepository&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(CompanyID, ID, Name, BankName, BranchName , EtlTime  )&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT @CompanyIdParam, RepositoryID, Name, BankName, BranchName, @DateNowParam &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM '+ @LinkServerPath +'[dbo].Repository X&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE NOT EXISTS (SELECT * FROM dbo.DimRepository WHERE ID = X.RepositoryID)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;print @SQL&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Execute sp_executesql with parameter definitions&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXEC sp_executesql &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@SQL,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N'@CompanyIdParam INT, @DateNowParam DATETIME',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CompanyIdParam = @CompanyID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam = @DateNow;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9; --SET   ?&#x9; = ('Ashkan' )&#xA;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9; SET   ?&#x9; = (  CONCAT (  @LinkServerPath&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , 'Insert Success' &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  '06_DimRepository '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_DimRepository_06"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimStore"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Use For Insert DimStore"
          DTS:DTSID="{105FC27A-AAC7-4A29-8884-683E54A9E0FA}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimStore"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="&#xA;&#xA;&#xA;-- Declare variables&#xA;&#xA;&#x9;&#x9;&#x9;DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;,  @CompanyID INT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;, @SQL NVARCHAR(MAX);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SET @DateNow =  GETDATE()&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--SET @LinkServerPath = '[10.15.20.231\RWP_2022].[RWP_Sale_DB_Bakhshi].'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--SET @CompanyID = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#x9;&#x9;&#x9;&#x9; &#xA;&#xA;&#x9;&#x9;&#x9;-- Build dynamic SQL string&#xA;&#xA;&#x9;&#x9;&#x9;SET @SQL = N'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO dbo.DimStore&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CompanyID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;StoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ParentID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Name,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Address,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Fax,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tel,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Latitude,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Longitude,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EtlTime&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CompanyIdParam,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;StoreID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ParentID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Name,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Address,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Fax,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Telephone,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Latitude,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Longitude,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM ' + @LinkServerPath + 'dbo.StoreView X&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE NOT EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT * FROM dbo.DimStore WHERE StoreID = X.StoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND X.LanguageID = 314';&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;print @SQL&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Execute sp_executesql with parameter definitions&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXEC sp_executesql &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@SQL,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N'@CompanyIdParam INT, @DateNowParam DATETIME',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CompanyIdParam = @CompanyID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam = @DateNow;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9; --SET   ?&#x9; = ('Ashkan' )&#xA;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9; SET   ?&#x9; = (  CONCAT (  @LinkServerPath&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , 'Insert Success ' &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , '02_DimStore '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_DimStore_02"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimTender"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2C35D8A3-7EA4-4CDE-B32D-22D7CE5F9C70}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimTender"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="&#xA;DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;,  @CompanyID INT &#xA;&#x9;&#x9;, @SQL NVARCHAR(MAX);&#xA;&#xA;&#x9;&#x9;SET @DateNow =  GETDATE()&#x9;&#xA;&#x9;&#x9;SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#xA; &#xA;  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; SET @SQL =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO dbo.DimTender&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(CompanyID ,TenderID, Name, TypeID, RepositoryID,EtlTime )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT @CompanyIdParam , &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TenderID , &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Name , &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;TenderTypeID , &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RepositoryID ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM '+ @LinkServerPath +'[dbo].Tender X&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE NOT EXISTS (SELECT * FROM dbo.DimTender WHERE TenderID = X.TenderID)&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;--&#x9;print @SQL&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;-- Execute sp_executesql with parameter definitions&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EXEC sp_executesql &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@SQL,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N'@CompanyIdParam INT, @DateNowParam DATETIME',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CompanyIdParam = @CompanyID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam = @DateNow;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9; --SET   ?&#x9; = ('Ashkan' )&#xA;&#x9;&#x9;&#x9;&#x9; SET   ?&#x9; = (  CONCAT (  @LinkServerPath&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , 'Insert Success ' &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  '07_DimTender '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_DimTender_07"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimUser"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5E80567E-D842-433D-A91F-7D759B128E7D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimUser"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource="&#xA;DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;,  @CompanyID INT &#xA;&#x9;&#x9;, @SQL NVARCHAR(MAX);&#xA;&#xA;&#x9;&#x9;SET @DateNow =  GETDATE()&#x9;&#xA;&#x9;&#x9;SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#xA; &#xA;  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; SET @SQL =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO dbo.DimUser&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;( UserID, Name, EtlTime )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT UserID, DisplayName,@DateNowParam FROM '+ @LinkServerPath +' [dbo].[User] X&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE NOT EXISTS (SELECT * FROM dbo.DimUser WHERE UserID = X.UserID)&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#xA; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;print @SQL&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;-- Execute sp_executesql with parameter definitions&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXEC sp_executesql &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@SQL,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N'@CompanyIdParam INT, @DateNowParam DATETIME',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CompanyIdParam = @CompanyID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam = @DateNow;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9; --SET   ?&#x9; = ('Ashkan' )&#xA;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9; SET   ?&#x9; = (  CONCAT (  @LinkServerPath&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , 'Insert Success ' &#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , '05_DimUser '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_DimUser_05"
                SQLTask:ParameterDirection="Output"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\FillDimWorkstation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{48FC428A-9F46-4ECD-A5B2-0C5075434690}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="FillDimWorkstation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F5D3767B-013C-4373-B1FC-DA2F9A79F694}"
              SQLTask:SqlStatementSource=" DECLARE  @LinkServerPath NVARCHAR(50)&#xA;&#x9;&#x9;, @DateNow DATETIME &#xA;&#x9;&#x9;,  @CompanyID INT &#xA;&#x9;&#x9;, @SQL NVARCHAR(MAX); &#xA;&#xA;&#x9;&#x9;SET @DateNow =  GETDATE()&#x9;&#xA;&#x9;    SET @LinkServerPath = ( ? )&#xA;&#x9;&#x9;SET @CompanyID = ( ? )&#xA;&#x9;&#x9;--SET @LinkServerPath = ( '[10.15.20.231\RWP_2022].[RWP_Sale_DB_Bakhshi].' )&#xA;&#x9;&#x9;--SET @CompanyID = ( 1 )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;SET @SQL =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INSERT INTO dbo.DimWorkstation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(   CompanyID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , StoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , WorkstationID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , Name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , EtlTime )&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT    @CompanyIdParam , StoreID , WorkstationID , Name , @DateNowParam&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM '+ @LinkServerPath +'[dbo].Workstation X&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE NOT EXISTS (SELECT * FROM dbo.DimWorkstation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE StoreID  = X.StoreID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND WorkstationID = X.WorkstationID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY StoreID , WorkstationID , Name&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;-- Execute sp_executesql with parameter definitions&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;EXEC sp_executesql &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@SQL,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;N'@CompanyIdParam INT, @DateNowParam DATETIME',&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@CompanyIdParam = @CompanyID,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;@DateNowParam = @DateNow;&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9; SET   ?&#x9; = (  CONCAT (  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;     CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , 'Insert Success ' &#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  'Seq_FillBaseDimension_FillDimWorkstation '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  , @DateNow&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  ,  CHAR(13)&#xA;&#x9;&#x9;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Project::PR_LinkServerPath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Project::PR_CompanyID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="131"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::VR_DimWorkstation_09"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Seq_FillBaseDimension\Success DimCompany"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{644641C4-D386-4135-9250-4CD7A757F04E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Success DimCompany"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4515383ce6e942579c695848f13c79e0"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::VR_DimCompany_01">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4515383ce6e942579c695848f13c79e0.Properties.Settings.get_Default():ST_4515383ce6e942579c695848f13c79e0.Properties.Sett" +
    "ings")]

namespace ST_4515383ce6e942579c695848f13c79e0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Globalization;
using System.Text;
#endregion

namespace ST_4515383ce6e942579c695848f13c79e0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            


            // TODO: Add your code here
            string VLogger = Dts.Variables["User::VR_DimCompany_01"].Value.ToString();

            PersianCalendar pc = new PersianCalendar();


            StringBuilder sb = new StringBuilder();

            sb.Append(pc.GetYear(DateTime.Now));
            sb.Append("/");
            sb.Append(pc.GetMonth(DateTime.Now));
            sb.Append("/");
            sb.Append(pc.GetDayOfMonth(DateTime.Now));
            sb.Append(" Time : ");
            sb.Append(pc.GetHour(DateTime.Now));
            sb.Append(":");
            sb.Append(pc.GetMinute(DateTime.Now));
            sb.Append(":");
            sb.Append(pc.GetSecond(DateTime.Now));


            string Logger = $"{Environment.NewLine} Succeess In {VLogger} {sb.ToString()} ";

            // Set the application path for the file
            string appPath = AppDomain.CurrentDomain.BaseDirectory;

            // Specify the file name
            string filePath = Path.Combine(appPath, "Output.txt");

            int retryCount = 3;
            while (retryCount > 0)
            {
                try
                {
                    using (StreamWriter outputFile = new StreamWriter(filePath, true)) // 'true' enables appending
                    {
                        outputFile.WriteLine();
                        outputFile.WriteLine();
                        outputFile.Write($"( {sb.ToString()} )");
                        outputFile.Write(new string('-', 50)); // Creates a 50-character line
                        outputFile.WriteLine("Start New Trace.... ");
                        outputFile.WriteLine(Logger);
                    }
                    break; // Success, exit the loop
                }
                catch (IOException)
                {
                    retryCount--;
                    if (retryCount == 0)
                    {
                        throw; // Re-throw the exception after retries are exhausted
                    }
                    System.Threading.Thread.Sleep(500); // Wait for 500ms before retrying
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_4515383ce6e942579c695848f13c79e0.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{88946776-D1B5-4E19-A1F4-51DED7BF9617}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4515383ce6e942579c695848f13c79e0</RootNamespace>
    <AssemblyName>ST_4515383ce6e942579c695848f13c79e0</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4515383ce6e942579c695848f13c79e0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4515383ce6e942579c695848f13c79e0</msb:DisplayName>
    <msb:ProjectId>{87AD8552-29A3-4180-9270-AB833AEA05BF}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4515383ce6e942579c695848f13c79e0.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4515383ce6e942579c695848f13c79e0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4515383ce6e942579c695848f13c79e0")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4515383ce6e942579c695848f13c79e0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4515383ce6e942579c695848f13c79e0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4515383ce6e942579c695848f13c79e0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4515383ce6e942579c695848f13c79e0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4515383ce6e942579c695848f13c79e0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4515383ce6e942579c695848f13c79e0.dll">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
AQB/IgAAAACTCCkB1QABAIciAAAAAJYISAbbAAIAjiIAAAAAhhgrBQYAAgCWIgAAAACRGDEF4AAC
AAAAAQBJAwkAKwUBABEAKwUGABkAKwUKACkAKwUQADEAKwUQADkAKwUQAEEAKwUQAEkAKwUQAFEA
KwUQAFkAKwUQAGEAKwUQAGkAKwUGAKEAKwUGAMkAKwUVANkAKwUGAHEAJAYoAOEABQYtAOkANwQy
APEAPwM4AKkAegM8AHkAKwUGAIEAKwUGAPkAewZAAAEB6QRFAIEAbwBLAIEAbwBRAAEBlgNFAAEB
iANFAAEBOAVFAAEBNQNFAAEBdgBFABEB/ABXAAkBOgZbABkBbQRhABkBkAY8ACEBCAFnAIkAKwVt
ACkB8gAGAAkBOgZzACkBlgEQAAkBKwV6ACkB8gAQADEBeQEGADkB0wSAAOEAVAYBAHEAKwUGAKkA
KwUGAEEBtwCFAEEBgwaOALEAKwWUANEAKwUGAAgAFACuAAgAGACzACkAcwAbAS4ACwDzAC4AEwD8
AC4AGwAbAS4AIwAkAS4AKwBNAS4AMwBNAS4AOwBNAS4AQwAkAS4ASwBTAS4AUwBNAS4AWwBqAUMA
YwCzAEkAcwAbAWEAewCzAGMAawCzABsAAwABAAQAAwAAAAMF5AAAAD0B6QAAAEwG7gACAAQAAwAC
AAUABQABAAYABQACAAcABwAEgAAAAQAAANUjHmMAAAAAAAABAAAABAAAAAAAAAAAAAAAnABfAAAA
AAAQAAAAAAAAAAAAAAClAJ8DAAAAAAQAAAAAAAAAAAAAAJwAQAQAAAAAEAAAAAAAAAAAAAAApQA4
AAAAAAAAAAAAAQAAAIQFAAAFAAIAAAAAAABTVF80NTE1MzgzY2U2ZTk0MjU3OWM2OTU4NDhmMTNj
NzllMAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZh
bHVlX18AbXNjb3JsaWIAVGhyZWFkAEFwcGVuZABHZXRTZWNvbmQAZGVmYXVsdEluc3RhbmNlAFZh
cmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERh
dGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAV3JpdGVMaW5lAGdldF9OZXdM
aW5lAENvbWJpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBXcml0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAR2V0TWludXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uVGhyZWFkaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVG9TdHJpbmcAUGF0aABHZXREYXlPZk1vbnRoAEdldE1vbnRoAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNj
cmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF80NTE1MzgzY2U2ZTk0MjU3
OWM2OTU4NDhmMTNjNzllMC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2Ny
aXB0TWFpbgBBcHBEb21haW4AZ2V0X0N1cnJlbnREb21haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
U3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASU9FeGNlcHRpb24AQ3VsdHVy
ZUluZm8AU2xlZXAAUGVyc2lhbkNhbGVuZGFyAEdldFllYXIAU3RyaW5nQnVpbGRlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAC5jdG9yAC5jY3RvcgBHZXRIb3Vy
AFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3Rl
bS5SZXNvdXJjZXMAU1RfNDUxNTM4M2NlNmU5NDI1NzljNjk1ODQ4ZjEzYzc5ZTAuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzQ1MTUzODNjZTZlOTQyNTc5
YzY5NTg0OGYxM2M3OWUwLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNz
AGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNr
UmVzdWx0AEVudmlyb25tZW50AFN5c3RlbS5UZXh0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AGdldF9C
YXNlRGlyZWN0b3J5AAAAAC1VAHMAZQByADoAOgBWAFIAXwBEAGkAbQBDAG8AbQBwAGEAbgB5AF8A
MAAxAAADLwAAESAAVABpAG0AZQAgADoAIAAAAzoAABsgAFMAdQBjAGMAZQBlAHMAcwAgAEkAbgAg
AAADIAAAFU8AdQB0AHAAdQB0AC4AdAB4AHQAAAUoACAAAAUgACkAAClTAHQAYQByAHQAIABOAGUA
dwAgAFQAcgBhAGMAZQAuAC4ALgAuACAAAHFTAFQAXwA0ADUAMQA1ADMAOAAzAGMAZQA2AGUAOQA0
ADIANQA3ADkAYwA2ADkANQA4ADQAOABmADEAMwBjADcAOQBlADAALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAABJHQ9ljRDMRLj0eu5sRYXIAAQgAQEIAyAAAQUgAQER
EQQgAQEOBSABARFhDAcHDhI9EkEODggSRQQgABJxBCAAEnUFIAESeRwDIAAcAyAADgQAABF9BSAB
CBF9BSABEkEIBSABEkEOAwAADgUAAQ4dDgUAABKAjQUAAg4ODgUgAgEOAgYAAw4ODg4FIAIBAwgE
AAEBCAgAARKAoRGApQUgABKAqQcgAgEOEoCpCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
ElkDBhJdAwYSEAIGCAMGERQEAAASWQQAABJdBQABARJdBAAAEhADAAABBAgAElkECAASXQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF80
NTE1MzgzY2U2ZTk0MjU3OWM2OTU4NDhmMTNjNzllMAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuN7QAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAcMgAAAAAAAAAAAAA2MgAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAKDIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAHmPVIwAAAQAeY9UjPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA0ADUAMQA1ADMAOAAzAGMAZQA2AGUAOQA0ADIANQA3ADkAYwA2ADkANQA4ADQAOABm
ADEAMwBjADcAOQBlADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OQAxADcAMwAuADIANQAzADcANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA0ADUAMQA1ADMAOAAzAGMAZQA2AGUAOQA0ADIANQA3ADkAYwA2ADkANQA4ADQAOABmADEA
MwBjADcAOQBlADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADQANQAxADUAMwA4ADMAYwBlADYAZQA5ADQAMgA1ADcAOQBjADYAOQA1ADgA
NAA4AGYAMQAzAGMANwA5AGUAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA0ADUAMQA1ADMAOAAzAGMAZQA2AGUAOQA0ADIANQA3ADkAYwA2ADkANQA4ADQA
OABmADEAMwBjADcAOQBlADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADkAMQA3ADMALgAyADUAMwA3ADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMQA3ADMALgAyADUAMwA3ADQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAASDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{752F3B43-1C08-4074-BCC6-B20B356248F9}"
          DTS:From="Package\Seq_FillBaseDimension\FillDimRepository"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Seq_FillBaseDimension\FillDimTender" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{F067FB5A-42A9-41F1-9C49-13FEB8D51B64}"
          DTS:From="Package\Seq_FillBaseDimension\FillDimCompany"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Seq_FillBaseDimension\Success DimCompany" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{FEAA1ABD-0199-4C1E-957F-53265AC9D60A}"
          DTS:From="Package\Seq_FillBaseDimension\Success DimCompany"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Seq_FillBaseDimension\FillDimStore" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{A3FD1E68-9109-4D2F-9B41-39073B4402EC}"
          DTS:From="Package\Seq_FillBaseDimension\FillDimStore"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Seq_FillBaseDimension\FillDimCalender" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 14]"
          DTS:CreationName=""
          DTS:DTSID="{D163E318-4C91-4EEF-A5C2-C5AE11167791}"
          DTS:From="Package\Seq_FillBaseDimension\FillDimCalender"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 14"
          DTS:To="Package\Seq_FillBaseDimension\FillDimWorkstation" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 16]"
          DTS:CreationName=""
          DTS:DTSID="{A702DCD4-D35B-4160-AF03-449DA962C7F2}"
          DTS:From="Package\Seq_FillBaseDimension\FillDimWorkstation"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 16"
          DTS:To="Package\Seq_FillBaseDimension\FillDimEtlTime" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{BE42654F-4772-404C-BB38-457B092FB18A}"
          DTS:From="Package\Seq_FillBaseDimension\Success DimCompany"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Seq_FillBaseDimension\FillDimRepository" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{E202D407-5D17-483F-BFCF-72E64102C2A1}"
          DTS:From="Package\Seq_FillBaseDimension\Success DimCompany"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Seq_FillBaseDimension\FillDimUser" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{CE4CF272-639C-4BF5-9BF6-2CFB2BAB3908}"
          DTS:From="Package\Seq_FillBaseDimension\Success DimCompany"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Seq_FillBaseDimension\FillDimDictionary" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{790948A0-C502-4611-A5B5-895AEA3CBD52}"
          DTS:From="Package\Seq_FillBaseDimension\Success DimCompany"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Seq_FillBaseDimension\FillDimEmployee" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Seq_FillBaseDimension.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{351000AE-0B6D-4399-A44A-79D5EC629FB4}"
          DTS:EventID="374393248"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{9F4572BC-E501-47BD-807E-CDCC51EF99B3}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Seq_FillBaseDimension.EventHandlers[OnError]\Seq_FillBaseDimension_OnError"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{9DB12DC6-2132-45F6-BAE1-D07768927B80}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Seq_FillBaseDimension_OnError">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_151442678f0c464e868a67da58938c8f"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::PackageName, System::SourceName, System::ExecutionInstanceGUID, System::ErrorCode, System::ErrorDescription, System::TaskName, User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_151442678f0c464e868a67da58938c8f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_151442678f0c464e868a67da58938c8f")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_151442678f0c464e868a67da58938c8f
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 متغیرهای لاگ خطا
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString();
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string errorCode = Dts.Variables["System::ErrorCode"].Value.ToString();
                string errorDesc = Dts.Variables["System::ErrorDescription"].Value.ToString();
                string status = "FAILED";

                // 🔹 ساخت مسیر فایل لاگ
                string logFileName = $"SSIS_Seq_FillBaseDimension_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine($"Error Code    : {errorCode}");
                    sw.WriteLine($"Error Message : {errorDesc}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 لاگ خطای ثانویه
                string fallbackPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Exception in OnError Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Seq_FillBaseDimension_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(fallbackPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);
                bool fireAgain = true;
                Dts.Events.FireError(0, "OnError Event Handler Script", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_151442678f0c464e868a67da58938c8f.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{861f84a3-1198-4b16-8046-d81f2b0e00c4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_151442678f0c464e868a67da58938c8f</RootNamespace>
    <AssemblyName>ST_151442678f0c464e868a67da58938c8f</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_151442678f0c464e868a67da58938c8f</msb:CodeName>
    <msb:DisplayName>ST_151442678f0c464e868a67da58938c8f</msb:DisplayName>
    <msb:ProjectId>{2CD57365-4048-46D9-8F4C-51F811B42D36}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_151442678f0c464e868a67da58938c8f.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_151442678f0c464e868a67da58938c8f.Properties.Settings.get_Default():ST_151442678f0c464e868a67da58938c8f.Properties.Sett" +
    "ings")]

namespace ST_151442678f0c464e868a67da58938c8f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_151442678f0c464e868a67da58938c8f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_151442678f0c464e868a67da58938c8f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_151442678f0c464e868a67da58938c8f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_151442678f0c464e868a67da58938c8f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_151442678f0c464e868a67da58938c8f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_151442678f0c464e868a67da58938c8f.dll">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
ZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFdyaXRlTGluZQBDb21iaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNl
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTVF8xNTE0NDI2NzhmMGM0NjRlODY4YTY3ZGE1ODkzOGM4
ZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzE1MTQ0MjY3OGYwYzQ2
NGU4NjhhNjdkYTU4OTM4YzhmLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBG
aXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMTUxNDQyNjc4ZjBjNDY0ZTg2OGE2
N2RhNTg5MzhjOGYuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVz
AFNUXzE1MTQ0MjY3OGYwYzQ2NGU4NjhhNjdkYTU4OTM4YzhmLlByb3BlcnRpZXMAZ2V0X1Zhcmlh
YmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4
aXN0cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABBcHBl
bmRBbGxUZXh0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAAAAALVUAcwBl
AHIAOgA6AFYAUgBfAEwAbwBnAEYAbwBsAGQAZQByAFAAYQB0AGgAACdTAHkAcwB0AGUAbQA6ADoA
UABhAGMAawBhAGcAZQBOAGEAbQBlAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBt
AGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAA7UwB5AHMAdABlAG0AOgA6AEUA
eABlAGMAdQB0AGkAbwBuAEkAbgBzAHQAYQBuAGMAZQBHAFUASQBEAAAjUwB5AHMAdABlAG0AOgA6
AEUAcgByAG8AcgBDAG8AZABlAAAxUwB5AHMAdABlAG0AOgA6AEUAcgByAG8AcgBEAGUAcwBjAHIA
aQBwAHQAaQBvAG4AAA1GAEEASQBMAEUARAAAX1MAUwBJAFMAXwBTAGUAcQBfAEYAaQBsAGwAQgBh
AHMAZQBEAGkAbQBlAG4AcwBpAG8AbgBfAEwAbwBnAF8AewAwADoAeQB5AHkAeQBNAE0AZABkAH0A
LgBsAG8AZwAAZS0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQABT0QA
YQB0AGUAVABpAG0AZQAgACAAIAAgACAAIAA6ACAAewAwADoAeQB5AHkAeQAtAE0ATQAtAGQAZAAg
AEgASAA6AG0AbQA6AHMAcwB9AAEhUABhAGMAawBhAGcAZQAgAE4AYQBtAGUAIAAgADoAIAAAIVMA
bwB1AHIAYwBlACAAVABhAHMAawAgACAAIAA6ACAAACFTAGMAcgBpAHAAdAAgAFQAYQBzAGsAIAAg
ACAAOgAgAAAhRQB4AGUAYwB1AHQAaQBvAG4AIABJAEQAIAAgADoAIAAAIVMAdABhAHQAdQBzACAA
IAAgACAAIAAgACAAIAA6ACAAACFFAHIAcgBvAHIAIABDAG8AZABlACAAIAAgACAAOgAgAAAhRQBy
AHIAbwByACAATQBlAHMAcwBhAGcAZQAgADoAIAAAV1sAewAwAH0AXQAgAEUAeABjAGUAcAB0AGkA
bwBuACAAaQBuACAATwBuAEUAcgByAG8AcgAgAFMAYwByAGkAcAB0ADoACgB7ADEAfQAKAHsAMgB9
AAoAAGtFAHgAYwBlAHAAdABpAG8AbgBfAFMAUwBJAFMAXwBTAGUAcQBfAEYAaQBsAGwAQgBhAHMA
ZQBEAGkAbQBlAG4AcwBpAG8AbgBfAHsAMAA6AHkAeQB5AHkATQBNAGQAZAB9AC4AbABvAGcAADlP
AG4ARQByAHIAbwByACAARQB2AGUAbgB0ACAASABhAG4AZABsAGUAcgAgAFMAYwByAGkAcAB0AAAB
AHFTAFQAXwAxADUAMQA0ADQAMgA2ADcAOABmADAAYwA0ADYANABlADgANgA4AGEANgA3AGQAYQA1
ADgAOQAzADgAYwA4AGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAAEOlDQSERrpPo7XE3G8atVYABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkRBw0ODg4ODg4O
Dg4SPRJBDg4EIAASaQQgABJtBSABEnEcAyAAHAMgAA4EAAECDgUAARJ5DgQAABF9BQACDg4cBQAC
Dg4OBSACAQ4CBwAEDg4cHBwFAAIBDg4FIAASgJUIIAUCCA4ODggIAAESgJkRgJ0FIAASgKEHIAIB
DhKAoQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUBAAAElEE
AAASVQUAAQESVQQAABIQAwAAAQQIABJRBAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMTUxNDQyNjc4ZjBjNDY0ZTg2OGE2N2Rh
NTg5MzhjOGYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAATQEAHC5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQu
Ny4yALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAAAMNgAAAAAAAAAAAAAmNgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
GDYAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABANNOOyQAAAEA0047JD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMQA1ADEANAA0ADIANgA3ADgAZgAwAGMANAA2ADQAZQA4ADYAOABhADYANwBkAGEANQA4
ADkAMwA4AGMAOABmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA3ADUALgAyADAAMQA3ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AMQA1ADEANAA0ADIANgA3ADgAZgAwAGMANAA2ADQAZQA4ADYAOABhADYANwBkAGEANQA4ADkA
MwA4AGMAOABmAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAxADUAMQA0ADQAMgA2ADcAOABmADAAYwA0ADYANABlADgANgA4AGEANgA3AGQA
YQA1ADgAOQAzADgAYwA4AGYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMQA1ADEANAA0ADIANgA3ADgAZgAwAGMANAA2ADQAZQA4ADYAOABhADYANwBkAGEA
NQA4ADkAMwA4AGMAOABmAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIANwA1AC4AMgAwADEANwA5AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIANwA1AC4AMgAwADEANwA5AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADg2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Seq_FillBaseDimension.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{ED583002-C878-4B3A-82FD-B08F9D94E468}"
          DTS:EventID="495350480"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{83F739AC-D92C-4549-B7A1-B1EE8132DB7D}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Seq_FillBaseDimension.EventHandlers[OnPostExecute]\Pkg_Seq_FillBaseDimension_PostExecute"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{A3549BAE-09C6-4F53-8324-925B9A561544}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Pkg_Seq_FillBaseDimension_PostExecute">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_1f715b2a1a674b4aa4e5826105fd07a1"
                  VSTAMajorVersion="16"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,System::SourceName,System::ExecutionInstanceGUID,System::PackageName,System::StartTime,User::VR_LogFolderPath">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1f715b2a1a674b4aa4e5826105fd07a1.Properties.Settings.get_Default():ST_1f715b2a1a674b4aa4e5826105fd07a1.Properties.Sett" +
    "ings")]

namespace ST_1f715b2a1a674b4aa4e5826105fd07a1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_1f715b2a1a674b4aa4e5826105fd07a1.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6e4c415f-cfe3-4635-81b0-29796efd842a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1f715b2a1a674b4aa4e5826105fd07a1</RootNamespace>
    <AssemblyName>ST_1f715b2a1a674b4aa4e5826105fd07a1</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_1f715b2a1a674b4aa4e5826105fd07a1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();

                // 🔹 بررسی وجود فولدر
                if (!Directory.Exists(logFolderPath))
                    Directory.CreateDirectory(logFolderPath);

                // 🔹 خواندن متغیرهای سیستمی
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                string sourceTask = Dts.Variables["System::SourceName"].Value.ToString(); // Task اصلی
                string scriptTask = Dts.Variables["System::TaskName"].Value.ToString();   // خود Script Task
                string executionId = Dts.Variables["System::ExecutionInstanceGUID"].Value.ToString();
                string status = "Success"; // چون PostExecute اجرا شده، یعنی موفق بوده

                // 🔹 ساخت نام فایل لاگ به صورت روزانه
                string logFileName = $"SSIS_Seq_FillBaseDimension_Log_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                // 🔹 نوشتن لاگ
                using (StreamWriter sw = new StreamWriter(logFilePath, true))
                {
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine($"DateTime      : {DateTime.Now:yyyy-MM-dd HH:mm:ss}");
                    sw.WriteLine($"Package Name  : {packageName}");
                    sw.WriteLine($"Source Task   : {sourceTask}");
                    sw.WriteLine($"Script Task   : {scriptTask}");
                    sw.WriteLine($"Execution ID  : {executionId}");
                    sw.WriteLine($"Status        : {status}");
                    sw.WriteLine("--------------------------------------------------");
                    sw.WriteLine();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                // 🔴 ثبت خطا در فایل پشتیبان
                // 🔹 مسیر پوشه لاگ
                string logFolderPath = Dts.Variables["User::VR_LogFolderPath"].Value.ToString();
                string errorMessage = $"[{DateTime.Now}] Error in Event Handler Script:\n{ex.Message}\n{ex.StackTrace}\n";
                string logFileName = $"Exception_SSIS_Seq_FillBaseDimension_{DateTime.Now:yyyyMMdd}.log";
                string logFilePath = Path.Combine(logFolderPath, logFileName);

                File.AppendAllText(logFilePath, errorMessage);

                // 🔴 ثبت خطا در SSIS Event
                bool fireAgain = true;
                Dts.Events.FireError(0, "Event Handler Script Error", ex.Message, "", 0);

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_1f715b2a1a674b4aa4e5826105fd07a1</msb:CodeName>
    <msb:DisplayName>ST_1f715b2a1a674b4aa4e5826105fd07a1</msb:DisplayName>
    <msb:ProjectId>{58CFC1F2-B42F-414C-9876-5BF11EAA4942}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_1f715b2a1a674b4aa4e5826105fd07a1.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1f715b2a1a674b4aa4e5826105fd07a1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1f715b2a1a674b4aa4e5826105fd07a1")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1f715b2a1a674b4aa4e5826105fd07a1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1f715b2a1a674b4aa4e5826105fd07a1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1f715b2a1a674b4aa4e5826105fd07a1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1f715b2a1a674b4aa4e5826105fd07a1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1f715b2a1a674b4aa4e5826105fd07a1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_1f715b2a1a674b4aa4e5826105fd07a1.dll">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
BwADAQAAygUAAEUABAAKABEAEAS1ABEAMQG5ABEAdwC9AAYGVwDBAFaAugXEAFaAEQHEAFAgAAAA
AIYAIgQGAAEAwCIAAAAAhhjRBAYAAQDIIgAAAACDGNEEBgABANAiAAAAAJMIhwTIAAEA/CIAAAAA
kwgZAc0AAQADIwAAAACTCCUB0gABAAsjAAAAAJYI/wXYAAIAEiMAAAAAhhjRBAYAAgAaIwAAAACR
GNcE3QACAAAAAQA1AwkA0QQBABEA0QQGABkA0QQKACkA0QQQADEA0QQQADkA0QQQAEEA0QQQAEkA
0QQQAFEA0QQQAFkA0QQQAGEA0QQQAGkA0QQGAJEA0QQGALkA0QQVAMkA0QQGAHEAwgUrANEAowUw
ANkA+wM1AOEAKwM7AJkAVQM/AOkA4wVDAOkAPQZIAPkAKAZOAAEB8QVTAAkBBAFZAHkA0QRfABEB
+gAQAAEB6gVZABEB+gAGABkBdQEGANEACwYBAIEAhwA/AIEAaAA/AAEB8QVlACEBGgZtANEA2AVz
ACkBxwR5AHEA0QQGAJkA0QQGADEBugCCADEBMAaLAKEA0QSRAMEA0QQGAAgAFACrAAgAGACwACkA
cwAYAS4ACwDwAC4AEwD5AC4AGwAYAS4AIwAhAS4AKwBKAS4AMwBKAS4AOwBKAS4AQwAhAS4ASwBQ
AS4AUwBKAS4AWwBnAUMAYwCwAEkAcwAYAWEAewCwAGMAawCwABsAAwABAAQAAwAAAIsE4QAAADkB
5gAAAAMG6wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAADgkVFIAAAAAAAABAAAABAAA
AAAAAAAAAAAAmQBfAAAAAAAQAAAAAAAAAAAAAACiAGMDAAAAAAQAAAAAAAAAAAAAAJkABAQAAAAA
EAAAAAAAAAAAAAAAogA4AAAAAAAAAAAAAQAAACIFAAAFAAIAAAAAAABTVF8xZjcxNWIyYTFhNjc0
YjRhYTRlNTgyNjEwNWZkMDdhMQA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZ2V0X1N0YWNrVHJhY2UAZGVmYXVsdEluc3Rh
bmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBXcml0ZUxpbmUAQ29tYmluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8xZjcx
NWIyYTFhNjc0YjRhYTRlNTgyNjEwNWZkMDdhMS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5m
bwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3RyZWFtV3JpdGVyAFRl
eHRXcml0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzFmNzE1YjJhMWE2
NzRiNGFhNGU1ODI2MTA1ZmQwN2ExLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF8xZjcxNWIyYTFhNjc0YjRhYTRlNTgyNjEwNWZkMDdhMS5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBFeGlzdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tS
ZXN1bHQAQXBwZW5kQWxsVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkA
AAAAAC1VAHMAZQByADoAOgBWAFIAXwBMAG8AZwBGAG8AbABkAGUAcgBQAGEAdABoAAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAJVMAeQBzAHQAZQBtADoAOgBTAG8AdQBy
AGMAZQBOAGEAbQBlAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAO1MAeQBzAHQA
ZQBtADoAOgBFAHgAZQBjAHUAdABpAG8AbgBJAG4AcwB0AGEAbgBjAGUARwBVAEkARAAAD1MAdQBj
AGMAZQBzAHMAAF9TAFMASQBTAF8AUwBlAHEAXwBGAGkAbABsAEIAYQBzAGUARABpAG0AZQBuAHMA
aQBvAG4AXwBMAG8AZwBfAHsAMAA6AHkAeQB5AHkATQBNAGQAZAB9AC4AbABvAGcAAGUtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0AAU9EAGEAdABlAFQAaQBtAGUAIAAg
ACAAIAAgACAAOgAgAHsAMAA6AHkAeQB5AHkALQBNAE0ALQBkAGQAIABIAEgAOgBtAG0AOgBzAHMA
fQABIVAAYQBjAGsAYQBnAGUAIABOAGEAbQBlACAAIAA6ACAAACFTAG8AdQByAGMAZQAgAFQAYQBz
AGsAIAAgACAAOgAgAAAhUwBjAHIAaQBwAHQAIABUAGEAcwBrACAAIAAgADoAIAAAIUUAeABlAGMA
dQB0AGkAbwBuACAASQBEACAAIAA6ACAAACFTAHQAYQB0AHUAcwAgACAAIAAgACAAIAAgACAAOgAg
AABbWwB7ADAAfQBdACAARQByAHIAbwByACAAaQBuACAARQB2AGUAbgB0ACAASABhAG4AZABsAGUA
cgAgAFMAYwByAGkAcAB0ADoACgB7ADEAfQAKAHsAMgB9AAoAAGtFAHgAYwBlAHAAdABpAG8AbgBf
AFMAUwBJAFMAXwBTAGUAcQBfAEYAaQBsAGwAQgBhAHMAZQBEAGkAbQBlAG4AcwBpAG8AbgBfAHsA
MAA6AHkAeQB5AHkATQBNAGQAZAB9AC4AbABvAGcAADVFAHYAZQBuAHQAIABIAGEAbgBkAGwAZQBy
ACAAUwBjAHIAaQBwAHQAIABFAHIAcgBvAHIAAAEAcVMAVABfADEAZgA3ADEANQBiADIAYQAxAGEA
NgA3ADQAYgA0AGEAYQA0AGUANQA4ADIANgAxADAANQBmAGQAMAA3AGEAMQAuAFAAcgBvAHAAZQBy
AHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAA79VBBgFEH0+DoNd0Foh50AAEIAEBCAMg
AAEFIAEBEREEIAEBDgUgAQERWQ8HCw4ODg4ODg4SPRJBDg4EIAASaQQgABJtBSABEnEcAyAAHAMg
AA4EAAECDgUAARJ5DgQAABF9BQACDg4cBQACDg4OBSACAQ4CBwAEDg4cHBwFAAIBDg4FIAASgJUI
IAUCCA4ODggIAAESgJkRgJ0FIAASgKEHIAIBDhKAoQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEA
AAADBhJRAwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQIABJRBAgAElUE
CAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfMWY3MTViMmExYTY3NGI0YWE0ZTU4MjYxMDVmZDA3YTEAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyNQAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4yAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAw1AAAAAAAAAAAA
ACY1AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYNQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBUUjgkAAABAFRSOCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADEAZgA3ADEANQBiADIAYQAxAGEANgA3ADQAYgA0AGEAYQA0AGUANQA4ADIANgAxADAA
NQBmAGQAMAA3AGEAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5
ADIANwAyAC4AMgAxADAANwA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADEAZgA3ADEANQBiADIAYQAxAGEANgA3ADQAYgA0AGEAYQA0AGUANQA4ADIANgAxADAANQBm
AGQAMAA3AGEAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMQBmADcAMQA1AGIAMgBhADEAYQA2ADcANABiADQAYQBhADQAZQA1ADgAMgA2
ADEAMAA1AGYAZAAwADcAYQAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADEAZgA3ADEANQBiADIAYQAxAGEANgA3ADQAYgA0AGEAYQA0AGUANQA4ADIANgAx
ADAANQBmAGQAMAA3AGEAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOQAyADcAMgAuADIAMQAwADcANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADIAMQAwADcANgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAA4NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{FC42061E-645C-459F-82E5-6063B6A8A661}"
      DTS:From="Package\Run_Pkg_Pkg_FillBaseSaleInfo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Run_Pkg_FilltemInfo" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{075D5FCA-6BD4-446F-AAB2-9A355500111D}"
      DTS:From="Package\Run_Pkg_FilltemInfo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Run_Pkg_FillCustomerInfo" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{73C9B927-48F1-43D2-93BA-975F3B445B60}"
      DTS:From="Package\Run_Pkg_FillCustomerInfo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Run_Pkg_FillSaleInfo" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{489164B9-36D9-433E-8461-CCC7E8339992}"
      DTS:From="Package\Run_Pkg_FillSaleInfo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Run_Pkg_FillStockDocumentInfo" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{303438D5-6628-45F4-BD17-266AA331680A}"
      DTS:From="Package\Run_Pkg_FillStockDocumentInfo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Run_Pkg_RainProcess" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{8E4B34A3-D102-4118-ACF9-69D459EEB562}"
      DTS:From="Package\Seq_FillBaseDimension"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Run_Pkg_Pkg_FillBaseSaleInfo" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="215,42"
          Id="Package\Run_Pkg_FillCustomerInfo"
          TopLeft="447.861111111109,786.861111111111" />
        <NodeLayout
          Size="183,42"
          Id="Package\Run_Pkg_FillSaleInfo"
          TopLeft="486.777777777782,616.11111111111" />
        <NodeLayout
          Size="232,42"
          Id="Package\Run_Pkg_FillStockDocumentInfo"
          TopLeft="611.361111111108,692.499999999999" />
        <NodeLayout
          Size="176,42"
          Id="Package\Run_Pkg_FilltemInfo"
          TopLeft="311,718.416666666666" />
        <NodeLayout
          Size="223,42"
          Id="Package\Run_Pkg_Pkg_FillBaseSaleInfo"
          TopLeft="172.777777777778,624.111111111111" />
        <NodeLayout
          Size="183,42"
          Id="Package\Run_Pkg_RainProcess"
          TopLeft="812.888888888891,603.888888888889" />
        <NodeLayout
          Size="152,42"
          Id="Package\Seq_FillBaseDimension\FillDimCalender"
          TopLeft="553.55555555556,102.111111111111" />
        <NodeLayout
          Size="154,42"
          Id="Package\Seq_FillBaseDimension\FillDimCompany"
          TopLeft="51.222222222223,26.777777777778" />
        <NodeLayout
          Size="158,42"
          Id="Package\Seq_FillBaseDimension\FillDimDictionary"
          TopLeft="338.277777777778,285.31746031746" />
        <NodeLayout
          Size="156,42"
          Id="Package\Seq_FillBaseDimension\FillDimEmployee"
          TopLeft="488.277777777778,231.31746031746" />
        <NodeLayout
          Size="163,42"
          Id="Package\Seq_FillBaseDimension\FillDimEtlTime"
          TopLeft="534,376" />
        <NodeLayout
          Size="160,42"
          Id="Package\Seq_FillBaseDimension\FillDimRepository"
          TopLeft="25.7777777777781,228.678571428571" />
        <NodeLayout
          Size="135,42"
          Id="Package\Seq_FillBaseDimension\FillDimStore"
          TopLeft="367.27777777778,28.31746031746" />
        <NodeLayout
          Size="163,42"
          Id="Package\Seq_FillBaseDimension\FillDimTender"
          TopLeft="37.2777777777781,341.81746031746" />
        <NodeLayout
          Size="132,42"
          Id="Package\Seq_FillBaseDimension\FillDimUser"
          TopLeft="217.277777777778,224.31746031746" />
        <NodeLayout
          Size="173,43"
          Id="Package\Seq_FillBaseDimension\FillDimWorkstation"
          TopLeft="688.75,243" />
        <NodeLayout
          Size="150,42"
          Id="Package\Seq_FillBaseDimension\Success DimCompany"
          TopLeft="210.277777777778,133.31746031746" />
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint]"
          TopLeft="105.777777777778,270.678571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13,71.138888888889"
              Start="0,0"
              End="13,63.638888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5694444444445" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5694444444445"
                    Point2="0,35.5694444444445"
                    Point3="4,35.5694444444445" />
                  <mssgle:LineSegment
                    End="9,35.5694444444445" />
                  <mssgle:CubicBezierSegment
                    Point1="9,35.5694444444445"
                    Point2="13,35.5694444444445"
                    Point3="13,39.5694444444445" />
                  <mssgle:LineSegment
                    End="13,63.638888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 10]"
          TopLeft="128.222222222223,68.777777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="133.388888888888,64.539682539682"
              Start="0,0"
              End="133.388888888888,57.039682539682">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3151149641912" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.3151149641912"
                    Point2="0,38.3151149641912"
                    Point3="4,38.3151149641912" />
                  <mssgle:LineSegment
                    End="129.388888888888,38.3151149641912" />
                  <mssgle:CubicBezierSegment
                    Point1="129.388888888888,38.3151149641912"
                    Point2="133.388888888888,38.3151149641912"
                    Point3="133.388888888888,42.3151149641912" />
                  <mssgle:LineSegment
                    End="133.388888888888,57.039682539682" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 11]"
          TopLeft="308.944444444445,133.31746031746">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="125.833333333335,-63"
              Start="0,0"
              End="125.833333333335,-55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-21.598944591029" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-21.598944591029"
                    Point2="0,-25.598944591029"
                    Point3="4,-25.598944591029" />
                  <mssgle:LineSegment
                    End="121.833333333335,-25.598944591029" />
                  <mssgle:CubicBezierSegment
                    Point1="121.833333333335,-25.598944591029"
                    Point2="125.833333333335,-25.598944591029"
                    Point3="125.833333333335,-29.598944591029" />
                  <mssgle:LineSegment
                    End="125.833333333335,-55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 12]"
          TopLeft="455.944444444447,70.31746031746">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="173.611111111113,31.793650793651"
              Start="0,0"
              End="173.611111111113,24.293650793651">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.94090032303805" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.94090032303805"
                    Point2="0,12.940900323038"
                    Point3="4,12.940900323038" />
                  <mssgle:LineSegment
                    End="169.611111111113,12.940900323038" />
                  <mssgle:CubicBezierSegment
                    Point1="169.611111111113,12.940900323038"
                    Point2="173.611111111113,12.940900323038"
                    Point3="173.611111111113,16.940900323038" />
                  <mssgle:LineSegment
                    End="173.611111111113,24.293650793651" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 14]"
          TopLeft="629.55555555556,144.111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145.69444444444,98.888888888889"
              Start="0,0"
              End="145.69444444444,91.388888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.4444444444445" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.4444444444445"
                    Point2="0,49.4444444444445"
                    Point3="4,49.4444444444445" />
                  <mssgle:LineSegment
                    End="141.69444444444,49.4444444444445" />
                  <mssgle:CubicBezierSegment
                    Point1="141.69444444444,49.4444444444445"
                    Point2="145.69444444444,49.4444444444445"
                    Point3="145.69444444444,53.4444444444445" />
                  <mssgle:LineSegment
                    End="145.69444444444,91.388888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 16]"
          TopLeft="775.25,286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-159.75,90"
              Start="0,0"
              End="-159.75,82.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41"
                    Point2="0,45"
                    Point3="-4,45" />
                  <mssgle:LineSegment
                    End="-155.75,45" />
                  <mssgle:CubicBezierSegment
                    Point1="-155.75,45"
                    Point2="-159.75,45"
                    Point3="-159.75,49" />
                  <mssgle:LineSegment
                    End="-159.75,82.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 6]"
          TopLeft="242.677777777778,175.31746031746">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-136.9,53.361111111111"
              Start="0,0"
              End="-136.9,45.861111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.0977653631284" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.0977653631284"
                    Point2="0,16.0977653631284"
                    Point3="-4,16.0977653631284" />
                  <mssgle:LineSegment
                    End="-132.9,16.0977653631284" />
                  <mssgle:CubicBezierSegment
                    Point1="-132.9,16.0977653631284"
                    Point2="-136.9,16.0977653631284"
                    Point3="-136.9,20.0977653631284" />
                  <mssgle:LineSegment
                    End="-136.9,45.861111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 7]"
          TopLeft="271.077777777778,175.31746031746">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.2,49"
              Start="0,0"
              End="12.2,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.9381443298969" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.9381443298969"
                    Point2="0,21.9381443298969"
                    Point3="4,21.9381443298969" />
                  <mssgle:LineSegment
                    End="8.19999999999999,21.9381443298969" />
                  <mssgle:CubicBezierSegment
                    Point1="8.19999999999999,21.9381443298969"
                    Point2="12.2,21.9381443298969"
                    Point3="12.2,25.9381443298969" />
                  <mssgle:LineSegment
                    End="12.2,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 8]"
          TopLeft="299.477777777778,175.31746031746">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="117.8,110"
              Start="0,0"
              End="117.8,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.2488954344625" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.2488954344625"
                    Point2="0,49.2488954344625"
                    Point3="4,49.2488954344625" />
                  <mssgle:LineSegment
                    End="113.8,49.2488954344625" />
                  <mssgle:CubicBezierSegment
                    Point1="113.8,49.2488954344625"
                    Point2="117.8,49.2488954344625"
                    Point3="117.8,53.2488954344625" />
                  <mssgle:LineSegment
                    End="117.8,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Seq_FillBaseDimension.PrecedenceConstraints[Constraint 9]"
          TopLeft="327.877777777778,175.31746031746">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="238.4,56"
              Start="0,0"
              End="238.4,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.8938547486034" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.8938547486034"
                    Point2="0,16.8938547486034"
                    Point3="4,16.8938547486034" />
                  <mssgle:LineSegment
                    End="234.4,16.8938547486034" />
                  <mssgle:CubicBezierSegment
                    Point1="234.4,16.8938547486034"
                    Point2="238.4,16.8938547486034"
                    Point3="238.4,20.8938547486034" />
                  <mssgle:LineSegment
                    End="238.4,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="885,511"
          Size="885,554"
          Id="Package\Seq_FillBaseDimension"
          TopLeft="136.539682539684,9.26984126984081" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="284.277777777778,666.111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.722222222222,52.305555555555"
              Start="0,0"
              End="114.722222222222,44.805555555555">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.1527777777775" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.1527777777775"
                    Point2="0,26.1527777777775"
                    Point3="4,26.1527777777775" />
                  <mssgle:LineSegment
                    End="110.722222222222,26.1527777777775" />
                  <mssgle:CubicBezierSegment
                    Point1="110.722222222222,26.1527777777775"
                    Point2="114.722222222222,26.1527777777775"
                    Point3="114.722222222222,30.1527777777775" />
                  <mssgle:LineSegment
                    End="114.722222222222,44.805555555555" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="399,760.416666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121.861111111109,26.444444444445"
              Start="0,0"
              End="121.861111111109,18.944444444445">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.7494613727304" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.7494613727304"
                    Point2="0,15.7494613727304"
                    Point3="4,15.7494613727304" />
                  <mssgle:LineSegment
                    End="117.861111111109,15.7494613727304" />
                  <mssgle:CubicBezierSegment
                    Point1="117.861111111109,15.7494613727304"
                    Point2="121.861111111109,15.7494613727304"
                    Point3="121.861111111109,19.7494613727304" />
                  <mssgle:LineSegment
                    End="121.861111111109,18.944444444445" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="589.861111111109,786.861111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-40.7499999999936,-128.750000000001"
              Start="0,0"
              End="-40.7499999999936,-121.250000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-60.2723617996567" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-60.2723617996567"
                    Point2="0,-64.2723617996567"
                    Point3="-4,-64.2723617996567" />
                  <mssgle:LineSegment
                    End="-36.7499999999936,-64.2723617996567" />
                  <mssgle:CubicBezierSegment
                    Point1="-36.7499999999936,-64.2723617996567"
                    Point2="-40.7499999999936,-64.2723617996567"
                    Point3="-40.7499999999936,-68.2723617996567" />
                  <mssgle:LineSegment
                    End="-40.7499999999936,-121.250000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="607.444444444449,658.11111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="82.5833333333259,34.3888888888894"
              Start="0,0"
              End="82.5833333333259,26.8888888888894">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.2333728636924" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.2333728636924"
                    Point2="0,17.2333728636924"
                    Point3="4,17.2333728636924" />
                  <mssgle:LineSegment
                    End="78.5833333333259,17.2333728636924" />
                  <mssgle:CubicBezierSegment
                    Point1="78.5833333333259,17.2333728636924"
                    Point2="82.5833333333259,17.2333728636924"
                    Point3="82.5833333333259,21.2333728636924" />
                  <mssgle:LineSegment
                    End="82.5833333333259,26.8888888888894" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="764.694444444441,692.499999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="139.694444444451,-46.611111111111"
              Start="0,0"
              End="139.694444444451,-39.111111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-14.83599695586" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-14.83599695586"
                    Point2="0,-18.83599695586"
                    Point3="4,-18.83599695586" />
                  <mssgle:LineSegment
                    End="135.694444444451,-18.83599695586" />
                  <mssgle:CubicBezierSegment
                    Point1="135.694444444451,-18.83599695586"
                    Point2="139.694444444451,-18.83599695586"
                    Point3="139.694444444451,-22.83599695586" />
                  <mssgle:LineSegment
                    End="139.694444444451,-39.111111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="579.039682539684,563.269841269841">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-294.761904761906,60.8412698412703"
              Start="0,0"
              End="-294.761904761906,53.3412698412703">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.4206349206352" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.4206349206352"
                    Point2="0,30.4206349206352"
                    Point3="-4,30.4206349206352" />
                  <mssgle:LineSegment
                    End="-290.761904761906,30.4206349206352" />
                  <mssgle:CubicBezierSegment
                    Point1="-290.761904761906,30.4206349206352"
                    Point2="-294.761904761906,30.4206349206352"
                    Point3="-294.761904761906,34.4206349206352" />
                  <mssgle:LineSegment
                    End="-294.761904761906,53.3412698412703" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_FillCustomerInfo.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="237,42"
          Id="Package\Run_Pkg_FillCustomerInfo.EventHandlers[OnPostExecute]\Pkg_FillCutomerInfo_PostExecute"
          TopLeft="377,131" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_FillCustomerInfo.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="217,42"
          Id="Package\Run_Pkg_FillCustomerInfo.EventHandlers[OnError]\Pkg_FillCutomerInfo_OnError"
          TopLeft="258,74" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_FillSaleInfo.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="223,43"
          Id="Package\Run_Pkg_FillSaleInfo.EventHandlers[OnPostExecute]\Pkg_FillSaleInfo_PostExecute"
          TopLeft="413,129" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_FillSaleInfo.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="196,42"
          Id="Package\Run_Pkg_FillSaleInfo.EventHandlers[OnError]\Pkg_FillSaleInfo_OnError"
          TopLeft="473,122" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_FillStockDocumentInfo.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="271,42"
          Id="Package\Run_Pkg_FillStockDocumentInfo.EventHandlers[OnPostExecute]\Pkg_FillStockDocumentInfo_PostExecute"
          TopLeft="408,107" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_FillStockDocumentInfo.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="250,42"
          Id="Package\Run_Pkg_FillStockDocumentInfo.EventHandlers[OnError]\Pkg_FillStockDocumentInfo_OnError"
          TopLeft="371,130" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_FilltemInfo.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="232,44"
          Id="Package\Run_Pkg_FilltemInfo.EventHandlers[OnPostExecute]\Pkg_FillItemInfo_PostExecute"
          TopLeft="323.97619047619,129.547619047619" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_FilltemInfo.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="218,42"
          Id="Package\Run_Pkg_FilltemInfo.EventHandlers[OnError]\Pkg_FillItemInfo_OnError"
          TopLeft="340,154" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_Pkg_FillBaseSaleInfo.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="242,42"
          Id="Package\Run_Pkg_Pkg_FillBaseSaleInfo.EventHandlers[OnPostExecute]\Pkg_FillBaseSaletInfo_PostExecute"
          TopLeft="467,163" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_Pkg_FillBaseSaleInfo.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="218,42"
          Id="Package\Run_Pkg_Pkg_FillBaseSaleInfo.EventHandlers[OnError]\Pkg_FillBaseSaleInfo_OnError"
          TopLeft="545,161" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_RainProcess.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="237,44"
          Id="Package\Run_Pkg_RainProcess.EventHandlers[OnPostExecute]\Pkg_RainProcess_OnPostExecute"
          TopLeft="499,118" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Run_Pkg_RainProcess.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="201,42"
          Id="Package\Run_Pkg_RainProcess.EventHandlers[OnError]\Pkg_RainProcess_OnError"
          TopLeft="366,121" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Seq_FillBaseDimension.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="278,42"
          Id="Package\Seq_FillBaseDimension.EventHandlers[OnPostExecute]\Pkg_Seq_FillBaseDimension_PostExecute"
          TopLeft="466,119" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Seq_FillBaseDimension.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="252,46"
          Id="Package\Seq_FillBaseDimension.EventHandlers[OnError]\Seq_FillBaseDimension_OnError"
          TopLeft="395,103" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>